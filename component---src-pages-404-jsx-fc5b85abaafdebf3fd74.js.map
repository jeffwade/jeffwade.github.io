{"version":3,"file":"component---src-pages-404-jsx-fc5b85abaafdebf3fd74.js","mappings":"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","sources":["webpack://jeffdoes/./node_modules/core-js/internals/a-constructor.js","webpack://jeffdoes/./node_modules/core-js/internals/advance-string-index.js","webpack://jeffdoes/./node_modules/core-js/internals/correct-prototype-getter.js","webpack://jeffdoes/./node_modules/core-js/internals/create-iterator-constructor.js","webpack://jeffdoes/./node_modules/core-js/internals/is-regexp.js","webpack://jeffdoes/./node_modules/core-js/internals/iterators-core.js","webpack://jeffdoes/./node_modules/core-js/internals/native-promise-constructor.js","webpack://jeffdoes/./node_modules/core-js/internals/new-promise-capability.js","webpack://jeffdoes/./node_modules/core-js/internals/object-get-prototype-of.js","webpack://jeffdoes/./node_modules/core-js/internals/promise-resolve.js","webpack://jeffdoes/./node_modules/core-js/internals/regexp-exec-abstract.js","webpack://jeffdoes/./node_modules/core-js/internals/regexp-exec.js","webpack://jeffdoes/./node_modules/core-js/internals/regexp-flags.js","webpack://jeffdoes/./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack://jeffdoes/./node_modules/core-js/internals/regexp-unsupported-dot-all.js","webpack://jeffdoes/./node_modules/core-js/internals/regexp-unsupported-ncg.js","webpack://jeffdoes/./node_modules/core-js/internals/set-to-string-tag.js","webpack://jeffdoes/./node_modules/core-js/internals/species-constructor.js","webpack://jeffdoes/./node_modules/core-js/internals/string-multibyte.js","webpack://jeffdoes/./node_modules/core-js/internals/to-string.js","webpack://jeffdoes/./node_modules/core-js/modules/es.global-this.js","webpack://jeffdoes/./node_modules/core-js/modules/es.math.hypot.js","webpack://jeffdoes/./node_modules/core-js/modules/es.promise.finally.js","webpack://jeffdoes/./node_modules/core-js/modules/es.string.match-all.js","webpack://jeffdoes/./node_modules/core-js/modules/esnext.global-this.js","webpack://jeffdoes/./node_modules/core-js/modules/esnext.string.match-all.js","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/images/mandigidala.png","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/PlasmicP5Sketch.jsx","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/PlasmicP5Sketch.module.css","webpack://jeffdoes/./src/components/P5Sketch.jsx","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/PlasmicNav.module.css","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/PlasmicNav.jsx","webpack://jeffdoes/./src/components/Nav.jsx","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/Plasmic_404.module.css","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/Plasmic_404.jsx","webpack://jeffdoes/./src/sketches/mandigidala.js","webpack://jeffdoes/./src/pages/404.jsx"],"sourcesContent":["var global = require('../internals/global');\nvar isConstructor = require('../internals/is-constructor');\nvar tryToString = require('../internals/try-to-string');\n\nvar TypeError = global.TypeError;\n\n// `Assert: IsConstructor(argument) is true`\nmodule.exports = function (argument) {\n  if (isConstructor(argument)) return argument;\n  throw TypeError(tryToString(argument) + ' is not a constructor');\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.es/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar create = require('../internals/object-create');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\nelse if (IS_PURE) IteratorPrototype = create(IteratorPrototype);\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif (!isCallable(IteratorPrototype[ITERATOR])) {\n  redefine(IteratorPrototype, ITERATOR, function () {\n    return this;\n  });\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n","'use strict';\nvar aCallable = require('../internals/a-callable');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aCallable(resolve);\n  this.reject = aCallable(reject);\n};\n\n// `NewPromiseCapability` abstract operation\n// https://tc39.es/ecma262/#sec-newpromisecapability\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var global = require('../internals/global');\nvar hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar Object = global.Object;\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof Object ? ObjectPrototype : null;\n};\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof-raw');\nvar regexpExec = require('../internals/regexp-exec');\n\nvar TypeError = global.TypeError;\n\n// `RegExpExec` abstract operation\n// https://tc39.es/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (isCallable(exec)) {\n    var result = call(exec, R, S);\n    if (result !== null) anObject(result);\n    return result;\n  }\n  if (classof(R) === 'RegExp') return call(regexpExec, R, S);\n  throw TypeError('RegExp#exec called on incompatible receiver');\n};\n","'use strict';\n/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */\n/* eslint-disable regexp/no-useless-quantifier -- testing */\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar regexpFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar shared = require('../internals/shared');\nvar create = require('../internals/object-create');\nvar getInternalState = require('../internals/internal-state').get;\nvar UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');\nvar UNSUPPORTED_NCG = require('../internals/regexp-unsupported-ncg');\n\nvar nativeReplace = shared('native-string-replace', String.prototype.replace);\nvar nativeExec = RegExp.prototype.exec;\nvar patchedExec = nativeExec;\nvar charAt = uncurryThis(''.charAt);\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  call(nativeExec, re1, 'a');\n  call(nativeExec, re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;\n\nif (PATCH) {\n  patchedExec = function exec(string) {\n    var re = this;\n    var state = getInternalState(re);\n    var str = toString(string);\n    var raw = state.raw;\n    var result, reCopy, lastIndex, match, i, object, group;\n\n    if (raw) {\n      raw.lastIndex = re.lastIndex;\n      result = call(patchedExec, raw, str);\n      re.lastIndex = raw.lastIndex;\n      return result;\n    }\n\n    var groups = state.groups;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = call(regexpFlags, re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = replace(flags, 'y', '');\n      if (indexOf(flags, 'g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = stringSlice(str, re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = call(nativeExec, sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = stringSlice(match.input, charsAdded);\n        match[0] = stringSlice(match[0], charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      call(nativeReplace, match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    if (match && groups) {\n      match.groups = object = create(null);\n      for (i = 0; i < groups.length; i++) {\n        group = groups[i];\n        object[group[0]] = match[group[1]];\n      }\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nvar UNSUPPORTED_Y = fails(function () {\n  var re = $RegExp('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\n// UC Browser bug\n// https://github.com/zloirock/core-js/issues/1008\nvar MISSED_STICKY = UNSUPPORTED_Y || fails(function () {\n  return !$RegExp('a', 'y').sticky;\n});\n\nvar BROKEN_CARET = UNSUPPORTED_Y || fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = $RegExp('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n\nmodule.exports = {\n  BROKEN_CARET: BROKEN_CARET,\n  MISSED_STICKY: MISSED_STICKY,\n  UNSUPPORTED_Y: UNSUPPORTED_Y\n};\n","var fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('.', 's');\n  return !(re.dotAll && re.exec('\\n') && re.flags === 's');\n});\n","var fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('(?<a>b)', 'g');\n  return re.exec('b').groups.a !== 'b' ||\n    'b'.replace(re, '$<a>c') !== 'bc';\n});\n","var defineProperty = require('../internals/object-define-property').f;\nvar hasOwn = require('../internals/has-own-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (target, TAG, STATIC) {\n  if (target && !STATIC) target = target.prototype;\n  if (target && !hasOwn(target, TO_STRING_TAG)) {\n    defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","var anObject = require('../internals/an-object');\nvar aConstructor = require('../internals/a-constructor');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aConstructor(S);\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar stringSlice = uncurryThis(''.slice);\n\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = toString(requireObjectCoercible($this));\n    var position = toIntegerOrInfinity(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = charCodeAt(S, position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING\n          ? charAt(S, position)\n          : first\n        : CONVERT_TO_STRING\n          ? stringSlice(S, position, position + 2)\n          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","var global = require('../internals/global');\nvar classof = require('../internals/classof');\n\nvar String = global.String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return String(argument);\n};\n","var $ = require('../internals/export');\nvar global = require('../internals/global');\n\n// `globalThis` object\n// https://tc39.es/ecma262/#sec-globalthis\n$({ global: true }, {\n  globalThis: global\n});\n","var $ = require('../internals/export');\n\n// eslint-disable-next-line es/no-math-hypot -- required for testing\nvar $hypot = Math.hypot;\nvar abs = Math.abs;\nvar sqrt = Math.sqrt;\n\n// Chrome 77 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=9546\nvar BUGGY = !!$hypot && $hypot(Infinity, NaN) !== Infinity;\n\n// `Math.hypot` method\n// https://tc39.es/ecma262/#sec-math.hypot\n$({ target: 'Math', stat: true, forced: BUGGY }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  hypot: function hypot(value1, value2) {\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * sqrt(sum);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar redefine = require('../internals/redefine');\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromise && fails(function () {\n  // eslint-disable-next-line unicorn/no-thenable -- required for testing\n  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.es/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = isCallable(onFinally);\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`\nif (!IS_PURE && isCallable(NativePromise)) {\n  var method = getBuiltIn('Promise').prototype['finally'];\n  if (NativePromise.prototype['finally'] !== method) {\n    redefine(NativePromise.prototype, 'finally', method, { unsafe: true });\n  }\n}\n","'use strict';\n/* eslint-disable es/no-string-prototype-matchall -- safe */\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar anObject = require('../internals/an-object');\nvar classof = require('../internals/classof-raw');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar isRegExp = require('../internals/is-regexp');\nvar regExpFlags = require('../internals/regexp-flags');\nvar getMethod = require('../internals/get-method');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\nvar InternalStateModule = require('../internals/internal-state');\nvar IS_PURE = require('../internals/is-pure');\n\nvar MATCH_ALL = wellKnownSymbol('matchAll');\nvar REGEXP_STRING = 'RegExp String';\nvar REGEXP_STRING_ITERATOR = REGEXP_STRING + ' Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(REGEXP_STRING_ITERATOR);\nvar RegExpPrototype = RegExp.prototype;\nvar TypeError = global.TypeError;\nvar getFlags = uncurryThis(regExpFlags);\nvar stringIndexOf = uncurryThis(''.indexOf);\nvar un$MatchAll = uncurryThis(''.matchAll);\n\nvar WORKS_WITH_NON_GLOBAL_REGEX = !!un$MatchAll && !fails(function () {\n  un$MatchAll('a', /./);\n});\n\nvar $RegExpStringIterator = createIteratorConstructor(function RegExpStringIterator(regexp, string, $global, fullUnicode) {\n  setInternalState(this, {\n    type: REGEXP_STRING_ITERATOR,\n    regexp: regexp,\n    string: string,\n    global: $global,\n    unicode: fullUnicode,\n    done: false\n  });\n}, REGEXP_STRING, function next() {\n  var state = getInternalState(this);\n  if (state.done) return { value: undefined, done: true };\n  var R = state.regexp;\n  var S = state.string;\n  var match = regExpExec(R, S);\n  if (match === null) return { value: undefined, done: state.done = true };\n  if (state.global) {\n    if (toString(match[0]) === '') R.lastIndex = advanceStringIndex(S, toLength(R.lastIndex), state.unicode);\n    return { value: match, done: false };\n  }\n  state.done = true;\n  return { value: match, done: false };\n});\n\nvar $matchAll = function (string) {\n  var R = anObject(this);\n  var S = toString(string);\n  var C, flagsValue, flags, matcher, $global, fullUnicode;\n  C = speciesConstructor(R, RegExp);\n  flagsValue = R.flags;\n  if (flagsValue === undefined && isPrototypeOf(RegExpPrototype, R) && !('flags' in RegExpPrototype)) {\n    flagsValue = getFlags(R);\n  }\n  flags = flagsValue === undefined ? '' : toString(flagsValue);\n  matcher = new C(C === RegExp ? R.source : R, flags);\n  $global = !!~stringIndexOf(flags, 'g');\n  fullUnicode = !!~stringIndexOf(flags, 'u');\n  matcher.lastIndex = toLength(R.lastIndex);\n  return new $RegExpStringIterator(matcher, S, $global, fullUnicode);\n};\n\n// `String.prototype.matchAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.matchall\n$({ target: 'String', proto: true, forced: WORKS_WITH_NON_GLOBAL_REGEX }, {\n  matchAll: function matchAll(regexp) {\n    var O = requireObjectCoercible(this);\n    var flags, S, matcher, rx;\n    if (regexp != null) {\n      if (isRegExp(regexp)) {\n        flags = toString(requireObjectCoercible('flags' in RegExpPrototype\n          ? regexp.flags\n          : getFlags(regexp)\n        ));\n        if (!~stringIndexOf(flags, 'g')) throw TypeError('`.matchAll` does not allow non-global regexes');\n      }\n      if (WORKS_WITH_NON_GLOBAL_REGEX) return un$MatchAll(O, regexp);\n      matcher = getMethod(regexp, MATCH_ALL);\n      if (matcher === undefined && IS_PURE && classof(regexp) == 'RegExp') matcher = $matchAll;\n      if (matcher) return call(matcher, regexp, O);\n    } else if (WORKS_WITH_NON_GLOBAL_REGEX) return un$MatchAll(O, regexp);\n    S = toString(O);\n    rx = new RegExp(regexp, 'g');\n    return IS_PURE ? call($matchAll, rx, S) : rx[MATCH_ALL](S);\n  }\n});\n\nIS_PURE || MATCH_ALL in RegExpPrototype || redefine(RegExpPrototype, MATCH_ALL, $matchAll);\n","// TODO: Remove from `core-js@4`\nrequire('../modules/es.global-this');\n","// TODO: Remove from `core-js@4`\nrequire('../modules/es.string.match-all');\n","export default __webpack_public_path__ + \"static/mandigidala-b21063d0537e2a59278d67bc72652d9c.png\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: mujoL4gD3qd1ezKDLZ31rZ\n// Component: ZbI4Qm1ePM\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport { useMode } from \"./PlasmicGlobalVariant__Mode\" // plasmic-import: zulsK3o-3W/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_jeffdo_es.module.css\" // plasmic-import: mujoL4gD3qd1ezKDLZ31rZ/projectcss\nimport * as sty from \"./PlasmicP5Sketch.module.css\" // plasmic-import: ZbI4Qm1ePM/css\nimport mandigidala8HsCguIpl from \"./images/mandigidala.png\" // plasmic-import: 8HSCguIpl/picture\n\nexport const PlasmicP5Sketch__VariantProps = new Array()\n\nexport const PlasmicP5Sketch__ArgProps = new Array(\"sketch\", \"sketchDiv\")\n\nfunction PlasmicP5Sketch__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const globalVariants = ensureGlobalVariants({\n    mode: useMode(),\n  })\n\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root,\n        \"sketch-canvas\",\n        {\n          [projectcss.global_mode_dark]: hasVariant(\n            globalVariants,\n            \"mode\",\n            \"dark\"\n          ),\n        }\n      )}\n      id={\"sketch-div\"}\n    >\n      {p.renderPlasmicSlot({\n        defaultContents: (\n          <p.PlasmicImg\n            alt={\"\"}\n            className={classNames(sty.img__n3Soy)}\n            displayHeight={\"auto\"}\n            displayMaxHeight={\"none\"}\n            displayMaxWidth={\"100%\"}\n            displayMinHeight={\"0\"}\n            displayMinWidth={\"0\"}\n            displayWidth={\"auto\"}\n            loading={\"lazy\"}\n            src={{\n              src: mandigidala8HsCguIpl,\n              fullWidth: 1711,\n              fullHeight: 1711,\n              aspectRatio: undefined,\n            }}\n          />\n        ),\n\n        value: args.sketchDiv,\n      })}\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicP5Sketch__ArgProps,\n      internalVariantPropNames: PlasmicP5Sketch__VariantProps,\n    })\n\n    return PlasmicP5Sketch__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicP5Sketch\"\n  } else {\n    func.displayName = `PlasmicP5Sketch.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicP5Sketch = Object.assign(\n  // Top-level PlasmicP5Sketch renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    // Metadata about props expected for PlasmicP5Sketch\n    internalVariantProps: PlasmicP5Sketch__VariantProps,\n    internalArgProps: PlasmicP5Sketch__ArgProps,\n  }\n)\n\nexport default PlasmicP5Sketch\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicP5Sketch-module--root--WlaT4\";\nexport var img__n3Soy = \"PlasmicP5Sketch-module--img__n3Soy--mxizX\";\nexport var __wab_imgSpacer = \"PlasmicP5Sketch-module--__wab_img-spacer--9jYVY\";","import React, { useRef, useEffect } from \"react\"\nimport p5 from 'p5';\nimport { PlasmicP5Sketch } from \"./plasmic/jeffdo_es/PlasmicP5Sketch\"\n\nfunction P5Sketch({ sketch, sketchDiv, ref, ...rest }) {\n  const sketchRef = useRef();\n  useEffect(() => {\n    new p5(sketch, sketchRef.current);\n  }, []);\n\n  return (\n    <PlasmicP5Sketch sketchDiv={<div ref={sketchRef}></div>} {...rest}/>\n  );\n}\n\nexport default P5Sketch\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicNav-module--root--DZDco\";\nexport var rootglobal_mode_dark = \"PlasmicNav-module--rootglobal_mode_dark--gimHD\";\nexport var rootglobal_mode_reveal = \"PlasmicNav-module--rootglobal_mode_reveal--ElS7j\";\nexport var reveal = \"PlasmicNav-module--reveal--jtOiM\";\nexport var revealglobal_mode_reveal = \"PlasmicNav-module--revealglobal_mode_reveal--GG5Cg\";\nexport var svg__sqohL = \"PlasmicNav-module--svg__sqohL--f9luf\";\nexport var svgglobal_mode_reveal__sqohLv94Jk = \"PlasmicNav-module--svgglobal_mode_reveal__sqohLv94Jk--PSwQa\";\nexport var home = \"PlasmicNav-module--home--KVTqF\";\nexport var homeglobal_mode_dark = \"PlasmicNav-module--homeglobal_mode_dark--OGFUF\";\nexport var homeglobal_mode_reveal = \"PlasmicNav-module--homeglobal_mode_reveal--KEdgE\";\nexport var svg__g4Zs = \"PlasmicNav-module--svg__g4Zs--5mDBI\";\nexport var svgglobal_mode_dark__g4ZsJYvh = \"PlasmicNav-module--svgglobal_mode_dark__g4ZsJYvh--NJpX8\";\nexport var svgglobal_mode_reveal__g4Zsv94Jk = \"PlasmicNav-module--svgglobal_mode_reveal__g4Zsv94Jk--f0ayp\";\nexport var svg___4Ydrm = \"PlasmicNav-module--svg___4Ydrm--laJeF\";\nexport var svgglobal_mode_dark___4YdrmJYvh = \"PlasmicNav-module--svgglobal_mode_dark___4YdrmJYvh--gq+Nj\";\nexport var svgglobal_mode_reveal___4Ydrmv94Jk = \"PlasmicNav-module--svgglobal_mode_reveal___4Ydrmv94Jk--ct3n1\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: mujoL4gD3qd1ezKDLZ31rZ\n// Component: oYHrOG4pQI\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport IconButton from \"../../IconButton\" // plasmic-import: mEnM6zW3GD/component\nimport { useMode } from \"./PlasmicGlobalVariant__Mode\" // plasmic-import: zulsK3o-3W/globalVariant\nimport { useScreenVariants as useScreenVariantsekypzdksLjd0F } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: EKYPZDKSLjd0F/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_jeffdo_es.module.css\" // plasmic-import: mujoL4gD3qd1ezKDLZ31rZ/projectcss\nimport * as sty from \"./PlasmicNav.module.css\" // plasmic-import: oYHrOG4pQI/css\nimport EyeOpenIcon from \"./icons/PlasmicIcon__EyeOpen\" // plasmic-import: J7fJnmL4N/icon\nimport EyeClosedIcon from \"./icons/PlasmicIcon__EyeClosed\" // plasmic-import: aBAB-JPNq/icon\nimport JwSharpIcon from \"./icons/PlasmicIcon__JwSharp\" // plasmic-import: imnHY-_8sU/icon\nimport NightIcon from \"./icons/PlasmicIcon__Night\" // plasmic-import: nS7MqAdlwl/icon\nimport DayIcon from \"./icons/PlasmicIcon__Day\" // plasmic-import: 2cwRWiCxc/icon\n\nexport const PlasmicNav__VariantProps = new Array()\n\nexport const PlasmicNav__ArgProps = new Array()\n\nfunction PlasmicNav__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const globalVariants = ensureGlobalVariants({\n    mode: useMode(),\n    screen: useScreenVariantsekypzdksLjd0F(),\n  })\n\n  return (hasVariant(globalVariants, \"mode\", \"dark\") ? true : true) ? (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root,\n        {\n          [projectcss.global_mode_dark]: hasVariant(\n            globalVariants,\n            \"mode\",\n            \"dark\"\n          ),\n\n          [sty.rootglobal_mode_dark]: hasVariant(\n            globalVariants,\n            \"mode\",\n            \"dark\"\n          ),\n\n          [sty.rootglobal_mode_reveal]: hasVariant(\n            globalVariants,\n            \"mode\",\n            \"reveal\"\n          ),\n        }\n      )}\n    >\n      <IconButton\n        data-plasmic-name={\"reveal\"}\n        data-plasmic-override={overrides.reveal}\n        className={classNames(\"__wab_instance\", sty.reveal, {\n          [sty.revealglobal_mode_reveal]: hasVariant(\n            globalVariants,\n            \"mode\",\n            \"reveal\"\n          ),\n        })}\n        icon={\n          <p.PlasmicIcon\n            PlasmicIconType={\n              hasVariant(globalVariants, \"mode\", \"reveal\")\n                ? EyeClosedIcon\n                : EyeOpenIcon\n            }\n            className={classNames(projectcss.all, sty.svg__sqohL, {\n              [sty.svgglobal_mode_reveal__sqohLv94Jk]: hasVariant(\n                globalVariants,\n                \"mode\",\n                \"reveal\"\n              ),\n            })}\n            cursor={\n              hasVariant(globalVariants, \"mode\", \"reveal\")\n                ? \"pointer\"\n                : \"pointer\"\n            }\n            role={\"img\"}\n          />\n        }\n        label={\n          hasVariant(globalVariants, \"mode\", \"reveal\")\n            ? \"hide controls\"\n            : \"show controls\"\n        }\n      />\n\n      <p.PlasmicLink\n        data-plasmic-name={\"home\"}\n        data-plasmic-override={overrides.home}\n        className={classNames(projectcss.all, projectcss.a, sty.home, {\n          [sty.homeglobal_mode_dark]: hasVariant(\n            globalVariants,\n            \"mode\",\n            \"dark\"\n          ),\n\n          [sty.homeglobal_mode_reveal]: hasVariant(\n            globalVariants,\n            \"mode\",\n            \"reveal\"\n          ),\n        })}\n        component={Link}\n        href={\"/design\"}\n        id={\n          hasVariant(globalVariants, \"mode\", \"reveal\")\n            ? \"logo\"\n            : hasVariant(globalVariants, \"mode\", \"dark\")\n            ? \"logo\"\n            : \"logo\"\n        }\n        platform={\"gatsby\"}\n        title={\n          hasVariant(globalVariants, \"mode\", \"reveal\")\n            ? \"jeff wade\"\n            : hasVariant(globalVariants, \"mode\", \"dark\")\n            ? \"jeff wade\"\n            : \"jeff wade\"\n        }\n      >\n        <IconButton\n          data-plasmic-name={\"logo\"}\n          data-plasmic-override={overrides.logo}\n          className={classNames(\"__wab_instance\", sty.logo, {\n            [sty.logoglobal_mode_dark]: hasVariant(\n              globalVariants,\n              \"mode\",\n              \"dark\"\n            ),\n\n            [sty.logoglobal_mode_reveal]: hasVariant(\n              globalVariants,\n              \"mode\",\n              \"reveal\"\n            ),\n          })}\n          icon={\n            <p.PlasmicIcon\n              PlasmicIconType={\n                hasVariant(globalVariants, \"mode\", \"reveal\")\n                  ? JwSharpIcon\n                  : hasVariant(globalVariants, \"mode\", \"dark\")\n                  ? JwSharpIcon\n                  : JwSharpIcon\n              }\n              className={classNames(projectcss.all, sty.svg__g4Zs, {\n                [sty.svgglobal_mode_dark__g4ZsJYvh]: hasVariant(\n                  globalVariants,\n                  \"mode\",\n                  \"dark\"\n                ),\n\n                [sty.svgglobal_mode_reveal__g4Zsv94Jk]: hasVariant(\n                  globalVariants,\n                  \"mode\",\n                  \"reveal\"\n                ),\n              })}\n              role={\"img\"}\n            />\n          }\n          label={\n            hasVariant(globalVariants, \"mode\", \"reveal\")\n              ? \"jeff wade\"\n              : hasVariant(globalVariants, \"mode\", \"dark\")\n              ? \"jeff wade\"\n              : \"jeff wade\"\n          }\n        />\n      </p.PlasmicLink>\n\n      <IconButton\n        data-plasmic-name={\"darkmode\"}\n        data-plasmic-override={overrides.darkmode}\n        className={classNames(\"__wab_instance\", sty.darkmode, {\n          [sty.darkmodeglobal_mode_dark]: hasVariant(\n            globalVariants,\n            \"mode\",\n            \"dark\"\n          ),\n\n          [sty.darkmodeglobal_mode_reveal]: hasVariant(\n            globalVariants,\n            \"mode\",\n            \"reveal\"\n          ),\n        })}\n        icon={\n          <p.PlasmicIcon\n            PlasmicIconType={\n              hasVariant(globalVariants, \"mode\", \"reveal\")\n                ? NightIcon\n                : hasVariant(globalVariants, \"mode\", \"dark\")\n                ? DayIcon\n                : NightIcon\n            }\n            className={classNames(projectcss.all, sty.svg___4Ydrm, {\n              [sty.svgglobal_mode_dark___4YdrmJYvh]: hasVariant(\n                globalVariants,\n                \"mode\",\n                \"dark\"\n              ),\n\n              [sty.svgglobal_mode_reveal___4Ydrmv94Jk]: hasVariant(\n                globalVariants,\n                \"mode\",\n                \"reveal\"\n              ),\n            })}\n            cursor={\n              hasVariant(globalVariants, \"mode\", \"reveal\")\n                ? \"pointer\"\n                : hasVariant(globalVariants, \"mode\", \"dark\")\n                ? \"pointer\"\n                : \"pointer\"\n            }\n            role={\"img\"}\n          />\n        }\n        label={\n          hasVariant(globalVariants, \"mode\", \"reveal\")\n            ? \"skitch to light mode\"\n            : hasVariant(globalVariants, \"mode\", \"dark\")\n            ? \"switch to light mode\"\n            : \"switch to darkmode\"\n        }\n      />\n    </div>\n  ) : null\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"reveal\", \"home\", \"logo\", \"darkmode\"],\n  reveal: [\"reveal\"],\n  home: [\"home\", \"logo\"],\n  logo: [\"logo\"],\n  darkmode: [\"darkmode\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicNav__ArgProps,\n      internalVariantPropNames: PlasmicNav__VariantProps,\n    })\n\n    return PlasmicNav__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicNav\"\n  } else {\n    func.displayName = `PlasmicNav.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicNav = Object.assign(\n  // Top-level PlasmicNav renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    reveal: makeNodeComponent(\"reveal\"),\n    home: makeNodeComponent(\"home\"),\n    logo: makeNodeComponent(\"logo\"),\n    darkmode: makeNodeComponent(\"darkmode\"),\n    // Metadata about props expected for PlasmicNav\n    internalVariantProps: PlasmicNav__VariantProps,\n    internalArgProps: PlasmicNav__ArgProps,\n  }\n)\n\nexport default PlasmicNav\n/* prettier-ignore-end */\n","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicNav } from \"./plasmic/jeffdo_es/PlasmicNav\"\n\nfunction Nav_(props, ref) {\n  // Use PlasmicNav to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicNav are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all NavProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicNav root={{ ref }} {...props} />\n}\n\nconst Nav = React.forwardRef(Nav_)\n\nexport default Nav\n","// extracted by mini-css-extract-plugin\nexport var root = \"Plasmic_404-module--root--AY+m-\";\nexport var freeBox__b1Tf7 = \"Plasmic_404-module--freeBox__b1Tf7--hDUzj\";\nexport var freeBoxglobal_mode_reveal__b1Tf7V94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal__b1Tf7V94Jk--iah4S\";\nexport var h2 = \"Plasmic_404-module--h2--vWTR9\";\nexport var text___9Attp = \"Plasmic_404-module--text___9Attp--947Zt\";\nexport var text__qihLi = \"Plasmic_404-module--text__qihLi--cCvPA\";\nexport var p5Sketch = \"Plasmic_404-module--p5Sketch--hFgPo\";\nexport var img__q55Cl = \"Plasmic_404-module--img__q55Cl--19VF+\";\nexport var __wab_imgSpacer = \"Plasmic_404-module--__wab_img-spacer--PY3jm\";\nexport var controls = \"Plasmic_404-module--controls--Vm5en\";\nexport var controlsglobal_mode_reveal = \"Plasmic_404-module--controlsglobal_mode_reveal--DlX0p\";\nexport var freeBox__p2Zdo = \"Plasmic_404-module--freeBox__p2Zdo--QaFbs\";\nexport var freeBoxglobal_mode_reveal__p2Zdov94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal__p2Zdov94Jk--UyuVU\";\nexport var h3 = \"Plasmic_404-module--h3--sJuOH\";\nexport var h3global_mode_reveal = \"Plasmic_404-module--h3global_mode_reveal--Tq7J1\";\nexport var freeBox___3ZKp = \"Plasmic_404-module--freeBox___3ZKp--jeuFt\";\nexport var freeBoxglobal_mode_reveal___3ZKpv94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal___3ZKpv94Jk--ebjRJ\";\nexport var freeBox__gWlBb = \"Plasmic_404-module--freeBox__gWlBb--RGgSX\";\nexport var freeBoxglobal_mode_reveal__gWlBBv94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal__gWlBBv94Jk--TOYx7\";\nexport var text__hl30A = \"Plasmic_404-module--text__hl30A--7LXDr\";\nexport var textglobal_mode_reveal__hl30Av94Jk = \"Plasmic_404-module--textglobal_mode_reveal__hl30Av94Jk--Bz9Lp\";\nexport var text__zKrYn = \"Plasmic_404-module--text__zKrYn--TeL66\";\nexport var textglobal_mode_reveal__zKrYnv94Jk = \"Plasmic_404-module--textglobal_mode_reveal__zKrYnv94Jk--KjnM4\";\nexport var freeBox__lsdS8 = \"Plasmic_404-module--freeBox__lsdS8--fxBXK\";\nexport var freeBoxglobal_mode_reveal__lsdS8V94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal__lsdS8V94Jk--SDVFL\";\nexport var text__yuaCy = \"Plasmic_404-module--text__yuaCy--vfI2s\";\nexport var textglobal_mode_reveal__yuaCyv94Jk = \"Plasmic_404-module--textglobal_mode_reveal__yuaCyv94Jk--+sJUi\";\nexport var text___46OTd = \"Plasmic_404-module--text___46OTd--0It5a\";\nexport var textglobal_mode_reveal___46OTdv94Jk = \"Plasmic_404-module--textglobal_mode_reveal___46OTdv94Jk--gOih8\";\nexport var freeBox__wUgE = \"Plasmic_404-module--freeBox__wUgE--Ykm29\";\nexport var freeBoxglobal_mode_reveal__wUgEv94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal__wUgEv94Jk--fe6j8\";\nexport var text__su7Mj = \"Plasmic_404-module--text__su7Mj--ndBeG\";\nexport var textglobal_mode_reveal__su7Mjv94Jk = \"Plasmic_404-module--textglobal_mode_reveal__su7Mjv94Jk--s4yb4\";\nexport var text__dVEf6 = \"Plasmic_404-module--text__dVEf6--dqSio\";\nexport var textglobal_mode_reveal__dVEf6V94Jk = \"Plasmic_404-module--textglobal_mode_reveal__dVEf6V94Jk--q7c2K\";\nexport var freeBox__a1Adx = \"Plasmic_404-module--freeBox__a1Adx--nOfXM\";\nexport var freeBoxglobal_mode_reveal__a1AdXv94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal__a1AdXv94Jk--eZvT-\";\nexport var text__jx42 = \"Plasmic_404-module--text__jx42--Y3Zm1\";\nexport var textglobal_mode_reveal__jx42V94Jk = \"Plasmic_404-module--textglobal_mode_reveal__jx42V94Jk--yGk5L\";\nexport var text__mWhT = \"Plasmic_404-module--text__mWhT--9U3Tq\";\nexport var textglobal_mode_reveal__mWhTv94Jk = \"Plasmic_404-module--textglobal_mode_reveal__mWhTv94Jk--WJ0Iw\";\nexport var freeBox__jQbp4 = \"Plasmic_404-module--freeBox__jQbp4--czY1H\";\nexport var freeBoxglobal_mode_reveal__jQbp4V94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal__jQbp4V94Jk--wxbic\";\nexport var text__fmI7Z = \"Plasmic_404-module--text__fmI7Z--d+vd4\";\nexport var textglobal_mode_reveal__fmI7Zv94Jk = \"Plasmic_404-module--textglobal_mode_reveal__fmI7Zv94Jk--PD0+D\";\nexport var text__zPsps = \"Plasmic_404-module--text__zPsps--P5mAF\";\nexport var textglobal_mode_reveal__zPspSv94Jk = \"Plasmic_404-module--textglobal_mode_reveal__zPspSv94Jk--Hbxtq\";\nexport var freeBox__jQik0 = \"Plasmic_404-module--freeBox__jQik0--DmgHb\";\nexport var freeBoxglobal_mode_reveal__jQik0V94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal__jQik0V94Jk--rhYm5\";\nexport var text___85W5 = \"Plasmic_404-module--text___85W5--+WCq-\";\nexport var textglobal_mode_reveal___85W5V94Jk = \"Plasmic_404-module--textglobal_mode_reveal___85W5V94Jk--tI4n1\";\nexport var text__vYtl = \"Plasmic_404-module--text__vYtl--tpGIi\";\nexport var textglobal_mode_reveal__vYtlv94Jk = \"Plasmic_404-module--textglobal_mode_reveal__vYtlv94Jk--GCY2A\";\nexport var freeBox__z6H = \"Plasmic_404-module--freeBox__z6H--ZOnio\";\nexport var freeBoxglobal_mode_reveal__z6HV94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal__z6HV94Jk--tCSUM\";\nexport var text___9GMvN = \"Plasmic_404-module--text___9GMvN--w5+g7\";\nexport var textglobal_mode_reveal___9GMvNv94Jk = \"Plasmic_404-module--textglobal_mode_reveal___9GMvNv94Jk--3FOr1\";\nexport var text__mn9Sz = \"Plasmic_404-module--text__mn9Sz--MHLIX\";\nexport var textglobal_mode_reveal__mn9Szv94Jk = \"Plasmic_404-module--textglobal_mode_reveal__mn9Szv94Jk--7sQAq\";\nexport var freeBox__aH8Rt = \"Plasmic_404-module--freeBox__aH8Rt--u5GnG\";\nexport var freeBoxglobal_mode_reveal__aH8Rtv94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal__aH8Rtv94Jk--dqTbk\";\nexport var text__vzP53 = \"Plasmic_404-module--text__vzP53--XaTKs\";\nexport var textglobal_mode_reveal__vzP53V94Jk = \"Plasmic_404-module--textglobal_mode_reveal__vzP53V94Jk--tUqpp\";\nexport var text__zh0O8 = \"Plasmic_404-module--text__zh0O8--vSMTE\";\nexport var textglobal_mode_reveal__zh0O8V94Jk = \"Plasmic_404-module--textglobal_mode_reveal__zh0O8V94Jk--SB6xL\";\nexport var freeBox__xAxfb = \"Plasmic_404-module--freeBox__xAxfb--hKuBy\";\nexport var freeBoxglobal_mode_reveal__xAxfbv94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal__xAxfbv94Jk--2V0g+\";\nexport var text___7YKxL = \"Plasmic_404-module--text___7YKxL--v8tTZ\";\nexport var textglobal_mode_reveal___7YKxLv94Jk = \"Plasmic_404-module--textglobal_mode_reveal___7YKxLv94Jk--4wJF9\";\nexport var text__wDfxb = \"Plasmic_404-module--text__wDfxb--bPkz3\";\nexport var textglobal_mode_reveal__wDfxBv94Jk = \"Plasmic_404-module--textglobal_mode_reveal__wDfxBv94Jk--lS1x6\";\nexport var freeBox__bgG2A = \"Plasmic_404-module--freeBox__bgG2A---vQuC\";\nexport var freeBoxglobal_mode_reveal__bgG2Av94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal__bgG2Av94Jk--BY4G0\";\nexport var text__lQvEg = \"Plasmic_404-module--text__lQvEg--92zzR\";\nexport var textglobal_mode_reveal__lQvEGv94Jk = \"Plasmic_404-module--textglobal_mode_reveal__lQvEGv94Jk--jcCO4\";\nexport var text___8EXrt = \"Plasmic_404-module--text___8EXrt--zJcuF\";\nexport var textglobal_mode_reveal___8EXrTv94Jk = \"Plasmic_404-module--textglobal_mode_reveal___8EXrTv94Jk--+r-6B\";\nexport var text__uXlNh = \"Plasmic_404-module--text__uXlNh--OEGZy\";\nexport var textglobal_mode_reveal__uXlNhv94Jk = \"Plasmic_404-module--textglobal_mode_reveal__uXlNhv94Jk--I1tN9\";\nexport var freeBox___7FyTr = \"Plasmic_404-module--freeBox___7FyTr--GuQKF\";\nexport var freeBoxglobal_mode_reveal___7FyTRv94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal___7FyTRv94Jk--Kuakw\";\nexport var text__vezl8 = \"Plasmic_404-module--text__vezl8--Buh8f\";\nexport var textglobal_mode_reveal__vezl8V94Jk = \"Plasmic_404-module--textglobal_mode_reveal__vezl8V94Jk--7RQR9\";\nexport var text__xnpu3 = \"Plasmic_404-module--text__xnpu3--DOExa\";\nexport var textglobal_mode_reveal__xnpu3V94Jk = \"Plasmic_404-module--textglobal_mode_reveal__xnpu3V94Jk--Q0Ix-\";\nexport var freeBox__fmXd = \"Plasmic_404-module--freeBox__fmXd--68cgt\";\nexport var freeBoxglobal_mode_reveal__fmXdv94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal__fmXdv94Jk--G4Fdy\";\nexport var text__lTgew = \"Plasmic_404-module--text__lTgew--kZNQW\";\nexport var textglobal_mode_reveal__lTgewv94Jk = \"Plasmic_404-module--textglobal_mode_reveal__lTgewv94Jk--57pOP\";\nexport var text__xtRf = \"Plasmic_404-module--text__xtRf--Mt+by\";\nexport var textglobal_mode_reveal__xtRfV94Jk = \"Plasmic_404-module--textglobal_mode_reveal__xtRfV94Jk--LKNn4\";\nexport var freeBox__hGUoi = \"Plasmic_404-module--freeBox__hGUoi--urBMa\";\nexport var freeBoxglobal_mode_reveal__hGUoiv94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal__hGUoiv94Jk--vudpk\";\nexport var text__he3Bq = \"Plasmic_404-module--text__he3Bq--FnSv6\";\nexport var textglobal_mode_reveal__he3Bqv94Jk = \"Plasmic_404-module--textglobal_mode_reveal__he3Bqv94Jk--wVQ0V\";\nexport var text__tu3Yb = \"Plasmic_404-module--text__tu3Yb--58teF\";\nexport var textglobal_mode_reveal__tu3YBv94Jk = \"Plasmic_404-module--textglobal_mode_reveal__tu3YBv94Jk--nEdKr\";\nexport var freeBox__sBt4N = \"Plasmic_404-module--freeBox__sBt4N--bcn4u\";\nexport var freeBoxglobal_mode_reveal__sBt4Nv94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal__sBt4Nv94Jk--buuAj\";\nexport var text___1Vvnc = \"Plasmic_404-module--text___1Vvnc--Vt7S9\";\nexport var textglobal_mode_reveal___1Vvncv94Jk = \"Plasmic_404-module--textglobal_mode_reveal___1Vvncv94Jk--qa4sA\";\nexport var text__s0KEd = \"Plasmic_404-module--text__s0KEd--gNDT8\";\nexport var textglobal_mode_reveal__s0KEdv94Jk = \"Plasmic_404-module--textglobal_mode_reveal__s0KEdv94Jk--wijFL\";\nexport var freeBox___3H9Oi = \"Plasmic_404-module--freeBox___3H9Oi--DGI8+\";\nexport var freeBoxglobal_mode_reveal___3H9Oiv94Jk = \"Plasmic_404-module--freeBoxglobal_mode_reveal___3H9Oiv94Jk--+znbx\";\nexport var text__yTgCr = \"Plasmic_404-module--text__yTgCr--8WIWE\";\nexport var textglobal_mode_reveal__yTgCRv94Jk = \"Plasmic_404-module--textglobal_mode_reveal__yTgCRv94Jk--gWP0I\";\nexport var text___7TmOv = \"Plasmic_404-module--text___7TmOv--2zoWy\";\nexport var textglobal_mode_reveal___7TmOVv94Jk = \"Plasmic_404-module--textglobal_mode_reveal___7TmOVv94Jk--Po5XU\";\nexport var nav = \"Plasmic_404-module--nav--kbhhR\";\nexport var navglobal_mode_dark = \"Plasmic_404-module--navglobal_mode_dark--tHbtn\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: mujoL4gD3qd1ezKDLZ31rZ\n// Component: zPZ01Sff-L\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport P5Sketch from \"../../P5Sketch\" // plasmic-import: ZbI4Qm1ePM/component\nimport Nav from \"../../Nav\" // plasmic-import: oYHrOG4pQI/component\nimport { useScreenVariants as useScreenVariantsekypzdksLjd0F } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: EKYPZDKSLjd0F/globalVariant\nimport { useMode } from \"./PlasmicGlobalVariant__Mode\" // plasmic-import: zulsK3o-3W/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_jeffdo_es.module.css\" // plasmic-import: mujoL4gD3qd1ezKDLZ31rZ/projectcss\nimport * as sty from \"./Plasmic_404.module.css\" // plasmic-import: zPZ01Sff-L/css\n\nexport const Plasmic_404__VariantProps = new Array()\n\nexport const Plasmic_404__ArgProps = new Array()\n\nfunction Plasmic_404__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantsekypzdksLjd0F(),\n    mode: useMode(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        <p.Stack\n          as={\"div\"}\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          hasGap={true}\n          className={classNames(\n            projectcss.all,\n            projectcss.root_reset,\n            projectcss.plasmic_default_styles,\n            projectcss.plasmic_mixins,\n            projectcss.plasmic_tokens,\n            sty.root,\n            {\n              [projectcss.global_mode_dark]: hasVariant(\n                globalVariants,\n                \"mode\",\n                \"dark\"\n              ),\n\n              [projectcss.global_mode_reveal]: hasVariant(\n                globalVariants,\n                \"mode\",\n                \"reveal\"\n              ),\n\n              [sty.rootglobal_mode_dark]: hasVariant(\n                globalVariants,\n                \"mode\",\n                \"dark\"\n              ),\n\n              [sty.rootglobal_mode_reveal]: hasVariant(\n                globalVariants,\n                \"mode\",\n                \"reveal\"\n              ),\n            }\n          )}\n        >\n          {(hasVariant(globalVariants, \"mode\", \"reveal\") ? true : true) ? (\n            <p.Stack\n              as={\"div\"}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.freeBox__b1Tf7, {\n                [sty.freeBoxglobal_mode_reveal__b1Tf7V94Jk]: hasVariant(\n                  globalVariants,\n                  \"mode\",\n                  \"reveal\"\n                ),\n              })}\n            >\n              <h2\n                data-plasmic-name={\"h2\"}\n                data-plasmic-override={overrides.h2}\n                className={classNames(\n                  projectcss.all,\n                  projectcss.h2,\n                  projectcss.__wab_text,\n                  sty.h2\n                )}\n              >\n                {\"four oh four\"}\n              </h2>\n\n              <div\n                className={classNames(\n                  projectcss.all,\n                  projectcss.__wab_text,\n                  sty.text___9Attp\n                )}\n              >\n                {hasVariant(globalVariants, \"screen\", \"desktopOnly\")\n                  ? \"the thing you were looking for isn't here. unless you were looking for this.\"\n                  : \"the thing you were looking for isn't here. unless you were looking for this.\"}\n              </div>\n\n              <div\n                className={classNames(\n                  projectcss.all,\n                  projectcss.__wab_text,\n                  sty.text__qihLi\n                )}\n              >\n                {\n                  \"whatever the reason for your presence here, take a moment to be present.\"\n                }\n              </div>\n            </p.Stack>\n          ) : null}\n\n          <P5Sketch\n            data-plasmic-name={\"p5Sketch\"}\n            data-plasmic-override={overrides.p5Sketch}\n            className={classNames(\"__wab_instance\", sty.p5Sketch, {\n              [sty.p5Sketchglobal_mode_reveal]: hasVariant(\n                globalVariants,\n                \"mode\",\n                \"reveal\"\n              ),\n            })}\n          />\n\n          {(hasVariant(globalVariants, \"mode\", \"reveal\") ? true : true) ? (\n            <p.Stack\n              as={\"div\"}\n              data-plasmic-name={\"controls\"}\n              data-plasmic-override={overrides.controls}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.controls, {\n                [sty.controlsglobal_mode_reveal]: hasVariant(\n                  globalVariants,\n                  \"mode\",\n                  \"reveal\"\n                ),\n              })}\n            >\n              {(hasVariant(globalVariants, \"mode\", \"reveal\") ? true : true) ? (\n                <div\n                  className={classNames(projectcss.all, sty.freeBox__p2Zdo, {\n                    [sty.freeBoxglobal_mode_reveal__p2Zdov94Jk]: hasVariant(\n                      globalVariants,\n                      \"mode\",\n                      \"reveal\"\n                    ),\n                  })}\n                >\n                  <h3\n                    data-plasmic-name={\"h3\"}\n                    data-plasmic-override={overrides.h3}\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.h3,\n                      projectcss.__wab_text,\n                      sty.h3,\n                      {\n                        [sty.h3global_mode_reveal]: hasVariant(\n                          globalVariants,\n                          \"mode\",\n                          \"reveal\"\n                        ),\n                      }\n                    )}\n                  >\n                    {hasVariant(globalVariants, \"mode\", \"reveal\")\n                      ? \"controls\"\n                      : \"Enter some text\"}\n                  </h3>\n                </div>\n              ) : null}\n              {(hasVariant(globalVariants, \"mode\", \"reveal\") ? true : true) ? (\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.freeBox___3ZKp, {\n                    [sty.freeBoxglobal_mode_reveal___3ZKpv94Jk]: hasVariant(\n                      globalVariants,\n                      \"mode\",\n                      \"reveal\"\n                    ),\n                  })}\n                >\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__gWlBb, {\n                      [sty.freeBoxglobal_mode_reveal__gWlBBv94Jk]: hasVariant(\n                        globalVariants,\n                        \"mode\",\n                        \"reveal\"\n                      ),\n                    })}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__hl30A,\n                        {\n                          [sty.textglobal_mode_reveal__hl30Av94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\") &&\n                      hasVariant(globalVariants, \"screen\", \"desktopOnly\")\n                        ? \"click\"\n                        : hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"tap\"\n                        : \"Enter some text\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__zKrYn,\n                        {\n                          [sty.textglobal_mode_reveal__zKrYnv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"randomize number of points, circles, & reflections\"\n                        : \"Enter some text\"}\n                    </div>\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__lsdS8, {\n                      [sty.freeBoxglobal_mode_reveal__lsdS8V94Jk]: hasVariant(\n                        globalVariants,\n                        \"mode\",\n                        \"reveal\"\n                      ),\n                    })}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__yuaCy,\n                        {\n                          [sty.textglobal_mode_reveal__yuaCyv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"press\"\n                        : \"Enter some text\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text___46OTd,\n                        {\n                          [sty.textglobal_mode_reveal___46OTdv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"& this'll happen\"\n                        : \"Enter some text\"}\n                    </div>\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__wUgE, {\n                      [sty.freeBoxglobal_mode_reveal__wUgEv94Jk]: hasVariant(\n                        globalVariants,\n                        \"mode\",\n                        \"reveal\"\n                      ),\n                    })}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__su7Mj,\n                        {\n                          [sty.textglobal_mode_reveal__su7Mjv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"← / →\"\n                        : \"Enter some text\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__dVEf6,\n                        {\n                          [sty.textglobal_mode_reveal__dVEf6V94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"Change circle radius [1, w/6]\"\n                        : \"Enter some text\"}\n                    </div>\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__a1Adx, {\n                      [sty.freeBoxglobal_mode_reveal__a1AdXv94Jk]: hasVariant(\n                        globalVariants,\n                        \"mode\",\n                        \"reveal\"\n                      ),\n                    })}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__jx42,\n                        {\n                          [sty.textglobal_mode_reveal__jx42V94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"↑ / ↓\"\n                        : \"Enter some text\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__mWhT,\n                        {\n                          [sty.textglobal_mode_reveal__mWhTv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"Change # of points [1, 50]\"\n                        : \"Enter some text\"}\n                    </div>\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__jQbp4, {\n                      [sty.freeBoxglobal_mode_reveal__jQbp4V94Jk]: hasVariant(\n                        globalVariants,\n                        \"mode\",\n                        \"reveal\"\n                      ),\n                    })}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__fmI7Z,\n                        {\n                          [sty.textglobal_mode_reveal__fmI7Zv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"+ / -\"\n                        : \"Enter some text\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__zPsps,\n                        {\n                          [sty.textglobal_mode_reveal__zPspSv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"Change circles/point [1, 50]\"\n                        : \"Enter some text\"}\n                    </div>\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__jQik0, {\n                      [sty.freeBoxglobal_mode_reveal__jQik0V94Jk]: hasVariant(\n                        globalVariants,\n                        \"mode\",\n                        \"reveal\"\n                      ),\n                    })}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text___85W5,\n                        {\n                          [sty.textglobal_mode_reveal___85W5V94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"↑ / ↓\"\n                        : \"Enter some text\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__vYtl,\n                        {\n                          [sty.textglobal_mode_reveal__vYtlv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"Change # of points [1, 50]\"\n                        : \"Enter some text\"}\n                    </div>\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__z6H, {\n                      [sty.freeBoxglobal_mode_reveal__z6HV94Jk]: hasVariant(\n                        globalVariants,\n                        \"mode\",\n                        \"reveal\"\n                      ),\n                    })}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text___9GMvN,\n                        {\n                          [sty.textglobal_mode_reveal___9GMvNv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"< / >\"\n                        : \"Enter some text\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__mn9Sz,\n                        {\n                          [sty.textglobal_mode_reveal__mn9Szv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"Change reflections [0, 1, 2]\"\n                        : \"Enter some text\"}\n                    </div>\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__aH8Rt, {\n                      [sty.freeBoxglobal_mode_reveal__aH8Rtv94Jk]: hasVariant(\n                        globalVariants,\n                        \"mode\",\n                        \"reveal\"\n                      ),\n                    })}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__vzP53,\n                        {\n                          [sty.textglobal_mode_reveal__vzP53V94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"[ / ]\"\n                        : \"Enter some text\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__zh0O8,\n                        {\n                          [sty.textglobal_mode_reveal__zh0O8V94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"Change rotation [0, 360]\"\n                        : \"Enter some text\"}\n                    </div>\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__xAxfb, {\n                      [sty.freeBoxglobal_mode_reveal__xAxfbv94Jk]: hasVariant(\n                        globalVariants,\n                        \"mode\",\n                        \"reveal\"\n                      ),\n                    })}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text___7YKxL,\n                        {\n                          [sty.textglobal_mode_reveal___7YKxLv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"enter\"\n                        : \"Enter some text\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__wDfxb,\n                        {\n                          [sty.textglobal_mode_reveal__wDfxBv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"swap fore/background colors\"\n                        : \"Enter some text\"}\n                    </div>\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__bgG2A, {\n                      [sty.freeBoxglobal_mode_reveal__bgG2Av94Jk]: hasVariant(\n                        globalVariants,\n                        \"mode\",\n                        \"reveal\"\n                      ),\n                    })}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__lQvEg,\n                        {\n                          [sty.textglobal_mode_reveal__lQvEGv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"j / u\"\n                        : \"Enter some text\"}\n                    </div>\n\n                    {(\n                      hasVariant(globalVariants, \"mode\", \"reveal\") ? true : true\n                    ) ? (\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.__wab_text,\n                          sty.text___8EXrt,\n                          {\n                            [sty.textglobal_mode_reveal___8EXrTv94Jk]:\n                              hasVariant(globalVariants, \"mode\", \"reveal\"),\n                          }\n                        )}\n                      >\n                        {hasVariant(globalVariants, \"mode\", \"reveal\")\n                          ? \"swap fore/background colors\"\n                          : \"Enter some text\"}\n                      </div>\n                    ) : null}\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__uXlNh,\n                        {\n                          [sty.textglobal_mode_reveal__uXlNhv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"Change hue [0, 360]\"\n                        : \"Enter some text\"}\n                    </div>\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox___7FyTr, {\n                      [sty.freeBoxglobal_mode_reveal___7FyTRv94Jk]: hasVariant(\n                        globalVariants,\n                        \"mode\",\n                        \"reveal\"\n                      ),\n                    })}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__vezl8,\n                        {\n                          [sty.textglobal_mode_reveal__vezl8V94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"k / i\"\n                        : \"Enter some text\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__xnpu3,\n                        {\n                          [sty.textglobal_mode_reveal__xnpu3V94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"Change saturation [0, 100]\"\n                        : \"Enter some text\"}\n                    </div>\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__fmXd, {\n                      [sty.freeBoxglobal_mode_reveal__fmXdv94Jk]: hasVariant(\n                        globalVariants,\n                        \"mode\",\n                        \"reveal\"\n                      ),\n                    })}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__lTgew,\n                        {\n                          [sty.textglobal_mode_reveal__lTgewv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"l / o\"\n                        : \"Enter some text\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__xtRf,\n                        {\n                          [sty.textglobal_mode_reveal__xtRfV94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"Change brightness [0, 100]\"\n                        : \"Enter some text\"}\n                    </div>\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__hGUoi, {\n                      [sty.freeBoxglobal_mode_reveal__hGUoiv94Jk]: hasVariant(\n                        globalVariants,\n                        \"mode\",\n                        \"reveal\"\n                      ),\n                    })}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__he3Bq,\n                        {\n                          [sty.textglobal_mode_reveal__he3Bqv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"shift\"\n                        : \"Enter some text\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__tu3Yb,\n                        {\n                          [sty.textglobal_mode_reveal__tu3YBv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"toggle edit secondary color\"\n                        : \"Enter some text\"}\n                    </div>\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__sBt4N, {\n                      [sty.freeBoxglobal_mode_reveal__sBt4Nv94Jk]: hasVariant(\n                        globalVariants,\n                        \"mode\",\n                        \"reveal\"\n                      ),\n                    })}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text___1Vvnc,\n                        {\n                          [sty.textglobal_mode_reveal___1Vvncv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"space\"\n                        : \"Enter some text\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__s0KEd,\n                        {\n                          [sty.textglobal_mode_reveal__s0KEdv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"fresh canvas (paint bg color)\"\n                        : \"Enter some text\"}\n                    </div>\n                  </div>\n\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox___3H9Oi, {\n                      [sty.freeBoxglobal_mode_reveal___3H9Oiv94Jk]: hasVariant(\n                        globalVariants,\n                        \"mode\",\n                        \"reveal\"\n                      ),\n                    })}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__yTgCr,\n                        {\n                          [sty.textglobal_mode_reveal__yTgCRv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"alt / option\"\n                        : \"Enter some text\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text___7TmOv,\n                        {\n                          [sty.textglobal_mode_reveal___7TmOVv94Jk]: hasVariant(\n                            globalVariants,\n                            \"mode\",\n                            \"reveal\"\n                          ),\n                        }\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"mode\", \"reveal\")\n                        ? \"toggle straight or curved paths\"\n                        : \"Enter some text\"}\n                    </div>\n                  </div>\n                </p.Stack>\n              ) : null}\n            </p.Stack>\n          ) : null}\n          {(hasVariant(globalVariants, \"mode\", \"dark\") ? true : true) ? (\n            <Nav\n              data-plasmic-name={\"nav\"}\n              data-plasmic-override={overrides.nav}\n              className={classNames(\"__wab_instance\", sty.nav, {\n                [sty.navglobal_mode_dark]: hasVariant(\n                  globalVariants,\n                  \"mode\",\n                  \"dark\"\n                ),\n\n                [sty.navglobal_mode_reveal]: hasVariant(\n                  globalVariants,\n                  \"mode\",\n                  \"reveal\"\n                ),\n              })}\n            />\n          ) : null}\n        </p.Stack>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"h2\", \"p5Sketch\", \"controls\", \"h3\", \"nav\"],\n  h2: [\"h2\"],\n  p5Sketch: [\"p5Sketch\"],\n  controls: [\"controls\", \"h3\"],\n  h3: [\"h3\"],\n  nav: [\"nav\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: Plasmic_404__ArgProps,\n      internalVariantPropNames: Plasmic_404__VariantProps,\n    })\n\n    return Plasmic_404__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"Plasmic_404\"\n  } else {\n    func.displayName = `Plasmic_404.${nodeName}`\n  }\n  return func\n}\n\nexport const Plasmic_404 = Object.assign(\n  // Top-level Plasmic_404 renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    h2: makeNodeComponent(\"h2\"),\n    p5Sketch: makeNodeComponent(\"p5Sketch\"),\n    controls: makeNodeComponent(\"controls\"),\n    h3: makeNodeComponent(\"h3\"),\n    nav: makeNodeComponent(\"nav\"),\n    // Metadata about props expected for Plasmic_404\n    internalVariantProps: Plasmic_404__VariantProps,\n    internalArgProps: Plasmic_404__ArgProps,\n  }\n)\n\nexport default Plasmic_404\n/* prettier-ignore-end */\n","const sketch = (p) => {\n  // 'variables\n  let fillColor, strokeColor, scrimColor, bgColor, breathColor;\n  let _primary = {h: 171, s: 98, b: 76, a: 90};\n  let _stroke = {h: 162, s: 4, b: 6, a: 20, w: 2};\n  let _secondary = {h: 200, s: 75, b: 3, a: 2};\n  let _breath = {h: _primary.h, s: 2, b: _primary.b, a: 20, r: 1/60, w: 1};\n  let breaths = [\"center\", \"corners\", \"all\", \"none\"];\n  let breathCount = 2;\n  let inspiration = breaths[breathCount];\n\n  let radius = 3;\n  let margin = 20;\n\n  const hasFill = true;\n  const hasStroke = false;\n  let colorsAreInverted = true;\n  let colorVelocity = 0;\n  const hueStep = 1;\n  let isStraight = false;\n  let secondaryToggle = false;\n\n  let points = 7;\n  let complications = 4;\n  let reflections = 1;\n  const initRotation = 0;\n  let rotation;\n\n  const randomize = () => {\n    points = Math.floor(p.random(1, 13));\n    complications = Math.floor(p.random(1, 7));\n    reflections = Math.floor(p.random(3));\n    radius = Math.floor(p.random(1, 20));\n  };\n\n  let frequency = 20;\n  let amplitude = 100;\n  const offset = { x: 24, y: 5 }\n\n  // margins inversely related to scalar\n  let marginScalar = 5;\n  let frameCount = 0;\n  const FR = 38;\n\n  //key controls\n  let isPlaying = true;\n\n  const initializeCanvas = () => {\n    const frameSize = (p.windowWidth > p.windowHeight) ? 0.6*p.windowHeight : 0.8*p.windowWidth;\n    let cnvs = p.createCanvas(frameSize, frameSize);\n\n    // 'initializations\n    margin = p.width/marginScalar;\n    amplitude = p.width/2 - margin;\n  };\n\n  // 'setup\n  p.setup = () => {\n    initializeCanvas();\n\n    // initialize colors\n    p.colorMode(p.HSB, 360, 100, 100, 100);\n    fillColor = p.color(_primary.h, _primary.s, _primary.b, _primary.a);\n    strokeColor= p.color(_stroke.h, _stroke.s, _stroke.b, _stroke.a);\n    bgColor = p.color(_secondary.h, _secondary.s, _secondary.b, 100);\n\n    rotation = initRotation;\n    reset();\n\n    p.frameRate(FR);\n    p.cursor('pointer');\n  }\n\n  // 'draw\n  p.draw = () => {\n\n    if (isPlaying) {\n      if ( colorVelocity !== 0 ) {\n        _primary.h += colorVelocity;\n        _primary.h = _primary.h%360;\n      }\n      (secondaryToggle && showToggleIndicator());\n      scrimColor = colorsAreInverted\n        ? p.color(_primary.h, _primary.s, _primary.b, _secondary.a)\n        : p.color(_secondary.h, _secondary.s, _secondary.b, _secondary.a);\n      fillColor = colorsAreInverted\n        ? p.color(_secondary.h, _secondary.s, _secondary.b, _primary.a)\n        : p.color(_primary.h, _primary.s, _primary.b, _primary.a);\n      weave(p.width/2, p.height/2, rotation);\n      blur();\n    }\n    breathe(inspiration, margin/4, p.width*_breath.r*Math.cos( p.radians(frameCount*0.8) ));\n  }\n\n  // 'weave\n  const weave = (_x, _y, _theta) => {\n    frameCount++;\n    p.push();\n      p.translate(_x, _y);\n      p.rotate( _theta );\n      // blendMode(SCREEN);\n      if ( hasFill ) {\n        p.fill(fillColor);\n      } else {\n         p.noFill();\n      }\n      if ( hasStroke ) {\n        p.stroke(strokeColor);\n        p.strokeWeight(_stroke.w);\n      } else {\n         p.noStroke();\n      }\n\n      for ( let i = 0;  i <= complications; i++ ) {\n        let theta = p.radians(frameCount * frequency)/offset.x;\n        let phi = i*Math.PI/offset.y;\n\n        //displacement\n        let x = amplitude*Math.cos(i*theta);\n        let y = isStraight\n          ? amplitude*Math.sin(i*phi)\n          : amplitude*Math.sin(theta+i*phi);\n\n        //complications\n        for ( let j = 0;  j < points; j++ ) {\n          p.push();\n          p.rotate(j*(2*Math.PI)/points);\n          switch(reflections) {\n            case 2:\n              p.circle(x/i, y, radius);\n              p.circle(-x/i, y, radius);\n              p.circle(x/i, -y, radius);\n              p.circle(-x/i, -y, radius);\n              break;\n            case 1:\n              p.circle(x/i, y, radius);\n              p.circle(-x/i, y, radius);\n              break;\n            default:\n              p.circle(x/i, y, radius);\n          }\n          p.pop();\n        }\n      }\n    p.pop();\n  };\n\n  // 'breathe\n  const breathe = (_set, _margin, _breathRate) => {\n    // breathColor = p.color(_primary.h, _breath.s, _primary.b, _breath.a);\n    p.push();\n      // p.noStroke();\n      p.stroke(fillColor);\n      p.strokeWeight(_breath.w);\n      p.noFill();\n      // p.fill(breathColor);\n      switch (_set) {\n        case \"center\":\n          p.circle(p.width/2, p.height/2, _breathRate);\n          break;\n        case \"corners\":\n          p.circle(_margin, _margin, _breathRate);\n          p.circle(p.width-_margin, _margin, _breathRate);\n          p.circle(p.width-_margin, p.height-_margin, _breathRate);\n          p.circle(_margin, p.height-_margin, _breathRate);\n          break;\n        case \"all\":\n          p.circle(p.width/2, p.height/2, _breathRate);\n          p.circle(_margin, _margin, _breathRate);\n          p.circle(p.width-_margin, _margin, _breathRate);\n          p.circle(p.width-_margin, p.height-_margin, _breathRate);\n          p.circle(_margin, p.height-_margin, _breathRate);\n          break;\n      }\n    p.pop();\n  };\n\n  // blur ('x)\n  const blur = () => {\n    p.push();\n      p.fill(scrimColor);\n      p.noStroke();\n    p.rect(0, 0, p.width, p.height);\n    p.pop();\n  };\n\n  p.mouseClicked = () => {\n    if ((p.mouseX < p.width && p.mouseX > 0) && (p.mouseY < p.height && p.mouseY > 0)) {\n      // colorsAreInverted = !colorsAreInverted;\n      randomize();\n      reset();\n    }\n  }\n\n  p.keyPressed = () => {\n    // Toggle between straight and curved paths\n    isStraight = ( p.keyCode === (p.ALT || p.OPTION) ) ? !isStraight : isStraight;\n    secondaryToggle = ( p.keyCode === p.SHIFT ) ? !secondaryToggle : secondaryToggle;\n\n    // ( p.key === 'p' ) ? isPlaying ? pause() : play() : null;\n     isPlaying = ( p.key === 'p' ) ? !isPlaying : isPlaying;\n\n    // up and down arrows to change the number of movers\n    (( p.keyCode === 38 ) && changePoints(1) );\n    (( p.keyCode === 40 ) && changePoints(-1) );\n\n    // + (=) and - to change complications\n    (( p.keyCode === 187 ) && changeComplications(1) );\n    (( p.keyCode === 189 ) && changeComplications(-1) );\n\n    // < (,) and > (.) to change complications\n    (( p.keyCode === 188 ) && changeReflections(-1) );\n    (( p.keyCode === 190 ) && changeReflections(1) );\n\n    // left and right arrows to change the size of the movers\n    (( p.keyCode === p.LEFT_ARROW ) && changeRadius(-1) );\n    (( p.keyCode === p.RIGHT_ARROW ) && changeRadius(1) );\n\n    // [ and ] to change the rotation\n    (( p.keyCode === 221 ) && changeRotation(Math.PI/60) );\n    (( p.keyCode === 219 ) && changeRotation(-Math.PI/60) );\n\n    // enter/return to invert the colors\n    colorsAreInverted = ( p.keyCode === (p.RETURN || p.ENTER) && isPlaying) ? !colorsAreInverted : colorsAreInverted;\n\n    // space to \"refresh\"\n    (( p.keyCode === 32 ) && reset() );\n\n    // change primary hue (u-j), saturation (i-k), brightness (o-l)\n    if ( !secondaryToggle ) {\n      (( p.key === 'u'  ) && changePrimaryHue(hueStep) );\n      (( p.key === 'j'  ) && changePrimaryHue(-hueStep) );\n      (( p.key === 'i'  ) && changePrimarySaturation(1) );\n      (( p.key === 'k'  ) && changePrimarySaturation(-1) );\n      (( p.key === 'o'  ) && changePrimaryBrightness(1) );\n      (( p.key === 'l'  ) && changePrimaryBrightness(-1) );\n    } else {\n      (( p.key === 'u'  ) && changeSecondaryHue(hueStep) );\n      (( p.key === 'j'  ) && changeSecondaryHue(-hueStep) );\n      (( p.key === 'i'  ) && changeSecondarySaturation(1) );\n      (( p.key === 'k'  ) && changeSecondarySaturation(-1) );\n      (( p.key === 'o'  ) && changeSecondaryBrightness(1) );\n      (( p.key === 'l'  ) && changeSecondaryBrightness(-1) );\n    }\n\n    (( p.key === 'b' ) && changeBreathing() );\n\n    // s to save the current frameCount as a PNG\n    (( p.key === 's' ) && p.saveCanvas(filename(), 'png') );\n  }\n\n  const changeBreathing = () => {\n    breathCount++;\n    breathCount = breathCount%4;\n    inspiration = breaths[breathCount];\n    p.background(bgColor);\n  };\n\n  const showToggleIndicator = () => {\n    p.push();\n      p.translate(p.width/2, 10);\n      p.noStroke();\n      p.fill(fillColor);\n      p.triangle(0, 0, -3, 5, 3, 5);\n    p.pop();\n  };\n\n  const changePrimaryHue = (delta) => {\n    _primary.h += delta;\n    _primary.h = (_primary.h < 0) ? _primary.h + 360 : _primary.h%360;\n  };\n\n  const changePrimaryBrightness = (delta) => {\n    _primary.b += delta;\n    _primary.b = p.map(_primary.b, 0, 100, 0, 100, true);\n  };\n\n  const changePrimarySaturation = (delta) => {\n    _primary.s += delta;\n    _primary.s = p.map(_primary.s, 0, 100, 0, 100, true);\n  };\n\n  const changeSecondaryHue = (delta) => {\n    _secondary.h += delta;\n    _secondary.h = (_secondary.h < 0) ? _secondary.h + 360 : _secondary.h%360;\n  };\n\n  const changeSecondaryBrightness = (delta) => {\n    _secondary.b += delta;\n    _secondary.b = p.map(_secondary.b, 0, 100, 0, 100, true);\n  };\n\n  const changeSecondarySaturation = (delta) => {\n    _secondary.s += delta;\n    _secondary.s = p.map(_secondary.s, 0, 100, 0, 100, true);\n  };\n\n  const reset = () => {\n    colorsAreInverted\n      ? bgColor = p.color(_primary.h, _primary.s, _primary.b, 100)\n      : bgColor = p.color(_secondary.h, _secondary.s, _secondary.b, 100);\n    p.background(bgColor);\n  };\n\n  const changeRotation = (delta) => {\n    if ( rotation + delta > (2*Math.PI)) {\n      rotation = (rotation - (2*Math.PI)) + delta;\n    } else if (rotation + delta < 0) {\n      rotation = ((2*Math.PI) + rotation) + delta;\n    } else {\n      rotation = rotation + delta;\n    }\n  };\n\n  const changeComplications = (delta) => {\n    let newComplications = complications + delta;\n    complications = p.map(newComplications, 1, 50, 1, 50, true);\n  };\n\n  const changeReflections = (delta) => {\n    let newReflections = reflections + delta;\n    reflections = p.map(newReflections, 0, 2, 0, 2, true);\n  };\n\n  const changePoints = (delta) => {\n    let newPoints = points + delta;\n    points = p.map(newPoints, 1, 50, 1, 50, true);\n  };\n\n  const changeRadius = (delta) => {\n    const newRadius = radius + delta;\n    radius = p.map(newRadius, 1, Math.floor(p.width/6), 1, Math.floor(p.width/6), true);\n  };\n\n  const play = () => {\n    p.loop();\n  };\n\n  const pause = () => {\n    p.noLoop();\n    isPlaying = false;\n  };\n\n  const filename = () => {\n    return `mandigidala-${points}-${complications}-${reflections}-${initRotation}-${frameCount}`;\n  }\n\n  p.windowResized = () => {\n    initializeCanvas();\n    reset();\n  }\n\n};\n\nexport default sketch;\n","import * as React from \"react\"\nimport { useState } from \"react\"\nimport { ModeContext } from \"../components/plasmic/jeffdo_es/PlasmicGlobalVariant__Mode\"\nimport { HighlightContext } from \"../components/plasmic/jeffdo_es/PlasmicGlobalVariant__Highlight\"\nimport { Plasmic_404 } from \"../components/plasmic/jeffdo_es/Plasmic_404\"\nimport sketch from '../sketches/mandigidala';\n\nfunction _404() {\n  const [mode, setMode] = useState([\"dark\"]);\n\n  const toggleReveal = () => {\n    const newMode = [...mode];\n    if ( newMode.includes(\"reveal\") ) {\n      newMode.pop();\n    } else {\n      newMode.push(\"reveal\");\n    }\n    setMode(newMode);\n  };\n\n  const toggleDarkMode = () => {\n    const newMode = [...mode];\n    if ( newMode.includes(\"dark\") ) {\n      newMode.shift();\n    } else {\n       newMode.unshift(\"dark\");\n    }\n    setMode(newMode);\n  };\n\n  return (\n    <HighlightContext.Provider value={undefined}>\n      <ModeContext.Provider value={mode}>\n        <Plasmic_404\n          p5Sketch={{\n            props: {\n              sketch: sketch,\n            }\n          }}\n\n          reveal={{\n            onClick: () => toggleReveal(),\n          }}\n          darkmode={{\n            onClick: () => toggleDarkMode(),\n          }}\n        />\n      </ModeContext.Provider>\n    </HighlightContext.Provider>\n  )\n}\n\nexport default _404\n"],"names":["global","isConstructor","tryToString","TypeError","module","exports","argument","charAt","S","index","unicode","length","fails","F","prototype","constructor","Object","getPrototypeOf","IteratorPrototype","create","createPropertyDescriptor","setToStringTag","Iterators","returnThis","this","IteratorConstructor","NAME","next","ENUMERABLE_NEXT","TO_STRING_TAG","isObject","classof","MATCH","wellKnownSymbol","it","isRegExp","undefined","PrototypeOfArrayIteratorPrototype","arrayIterator","isCallable","redefine","IS_PURE","ITERATOR","BUGGY_SAFARI_ITERATORS","keys","test","call","Promise","aCallable","PromiseCapability","C","resolve","reject","promise","$$resolve","$$reject","f","hasOwn","toObject","sharedKey","CORRECT_PROTOTYPE_GETTER","IE_PROTO","ObjectPrototype","O","object","anObject","newPromiseCapability","x","promiseCapability","regexpExec","R","exec","result","re1","re2","uncurryThis","toString","regexpFlags","stickyHelpers","shared","getInternalState","UNSUPPORTED_DOT_ALL","UNSUPPORTED_NCG","nativeReplace","String","replace","nativeExec","RegExp","patchedExec","indexOf","stringSlice","slice","UPDATES_LAST_INDEX_WRONG","lastIndex","UNSUPPORTED_Y","BROKEN_CARET","NPCG_INCLUDED","string","reCopy","match","i","group","re","state","str","raw","groups","sticky","flags","source","charsAdded","strCopy","multiline","input","arguments","that","ignoreCase","dotAll","$RegExp","MISSED_STICKY","a","defineProperty","target","TAG","STATIC","configurable","value","aConstructor","SPECIES","defaultConstructor","toIntegerOrInfinity","requireObjectCoercible","charCodeAt","createMethod","CONVERT_TO_STRING","$this","pos","first","second","position","size","codeAt","$","globalThis","$hypot","Math","hypot","abs","sqrt","stat","forced","Infinity","NaN","value1","value2","arg","div","sum","aLen","larg","NativePromise","getBuiltIn","speciesConstructor","promiseResolve","proto","real","then","onFinally","isFunction","e","method","unsafe","createIteratorConstructor","toLength","isPrototypeOf","regExpFlags","getMethod","advanceStringIndex","regExpExec","InternalStateModule","MATCH_ALL","REGEXP_STRING","REGEXP_STRING_ITERATOR","setInternalState","set","getterFor","RegExpPrototype","getFlags","stringIndexOf","un$MatchAll","matchAll","WORKS_WITH_NON_GLOBAL_REGEX","$RegExpStringIterator","regexp","$global","fullUnicode","type","done","$matchAll","flagsValue","matcher","rx","PlasmicP5Sketch__VariantProps","Array","PlasmicP5Sketch__ArgProps","PlasmicDescendants","root","nodeName","func","PlasmicP5Sketch","assign","props","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","args","overrides","forNode","globalVariants","ensureGlobalVariants","mode","useMode","className","classNames","projectcss","hasVariant","id","p","defaultContents","alt","displayHeight","displayMaxHeight","displayMaxWidth","displayMinHeight","displayMinWidth","displayWidth","loading","src","mandigidala8HsCguIpl","fullWidth","fullHeight","aspectRatio","sketchDiv","PlasmicP5Sketch__RenderFunc","displayName","internalVariantProps","internalArgProps","sketch","rest","ref","sketchRef","useRef","useEffect","p5","current","rootglobal_mode_dark","rootglobal_mode_reveal","reveal","revealglobal_mode_reveal","svg__sqohL","svgglobal_mode_reveal__sqohLv94Jk","home","homeglobal_mode_dark","homeglobal_mode_reveal","svg__g4Zs","svgglobal_mode_dark__g4ZsJYvh","svgglobal_mode_reveal__g4Zsv94Jk","svg___4Ydrm","svgglobal_mode_dark___4YdrmJYvh","svgglobal_mode_reveal___4Ydrmv94Jk","PlasmicNav__VariantProps","PlasmicNav__ArgProps","logo","darkmode","makeNodeComponent","screen","useScreenVariantsekypzdksLjd0F","sty","IconButton","icon","PlasmicIconType","EyeClosedIcon","EyeOpenIcon","cursor","role","label","component","Link","href","platform","title","JwSharpIcon","NightIcon","DayIcon","PlasmicNav__RenderFunc","PlasmicNav","Nav_","React","freeBox__b1Tf7","freeBoxglobal_mode_reveal__b1Tf7V94Jk","h2","text___9Attp","text__qihLi","p5Sketch","controls","controlsglobal_mode_reveal","freeBox__p2Zdo","freeBoxglobal_mode_reveal__p2Zdov94Jk","h3","h3global_mode_reveal","freeBox___3ZKp","freeBoxglobal_mode_reveal___3ZKpv94Jk","freeBox__gWlBb","freeBoxglobal_mode_reveal__gWlBBv94Jk","text__hl30A","textglobal_mode_reveal__hl30Av94Jk","text__zKrYn","textglobal_mode_reveal__zKrYnv94Jk","freeBox__lsdS8","freeBoxglobal_mode_reveal__lsdS8V94Jk","text__yuaCy","textglobal_mode_reveal__yuaCyv94Jk","text___46OTd","textglobal_mode_reveal___46OTdv94Jk","freeBox__wUgE","freeBoxglobal_mode_reveal__wUgEv94Jk","text__su7Mj","textglobal_mode_reveal__su7Mjv94Jk","text__dVEf6","textglobal_mode_reveal__dVEf6V94Jk","freeBox__a1Adx","freeBoxglobal_mode_reveal__a1AdXv94Jk","text__jx42","textglobal_mode_reveal__jx42V94Jk","text__mWhT","textglobal_mode_reveal__mWhTv94Jk","freeBox__jQbp4","freeBoxglobal_mode_reveal__jQbp4V94Jk","text__fmI7Z","textglobal_mode_reveal__fmI7Zv94Jk","text__zPsps","textglobal_mode_reveal__zPspSv94Jk","freeBox__jQik0","freeBoxglobal_mode_reveal__jQik0V94Jk","text___85W5","textglobal_mode_reveal___85W5V94Jk","text__vYtl","textglobal_mode_reveal__vYtlv94Jk","freeBox__z6H","freeBoxglobal_mode_reveal__z6HV94Jk","text___9GMvN","textglobal_mode_reveal___9GMvNv94Jk","text__mn9Sz","textglobal_mode_reveal__mn9Szv94Jk","freeBox__aH8Rt","freeBoxglobal_mode_reveal__aH8Rtv94Jk","text__vzP53","textglobal_mode_reveal__vzP53V94Jk","text__zh0O8","textglobal_mode_reveal__zh0O8V94Jk","freeBox__xAxfb","freeBoxglobal_mode_reveal__xAxfbv94Jk","text___7YKxL","textglobal_mode_reveal___7YKxLv94Jk","text__wDfxb","textglobal_mode_reveal__wDfxBv94Jk","freeBox__bgG2A","freeBoxglobal_mode_reveal__bgG2Av94Jk","text__lQvEg","textglobal_mode_reveal__lQvEGv94Jk","text___8EXrt","textglobal_mode_reveal___8EXrTv94Jk","text__uXlNh","textglobal_mode_reveal__uXlNhv94Jk","freeBox___7FyTr","freeBoxglobal_mode_reveal___7FyTRv94Jk","text__vezl8","textglobal_mode_reveal__vezl8V94Jk","text__xnpu3","textglobal_mode_reveal__xnpu3V94Jk","freeBox__fmXd","freeBoxglobal_mode_reveal__fmXdv94Jk","text__lTgew","textglobal_mode_reveal__lTgewv94Jk","text__xtRf","textglobal_mode_reveal__xtRfV94Jk","freeBox__hGUoi","freeBoxglobal_mode_reveal__hGUoiv94Jk","text__he3Bq","textglobal_mode_reveal__he3Bqv94Jk","text__tu3Yb","textglobal_mode_reveal__tu3YBv94Jk","freeBox__sBt4N","freeBoxglobal_mode_reveal__sBt4Nv94Jk","text___1Vvnc","textglobal_mode_reveal___1Vvncv94Jk","text__s0KEd","textglobal_mode_reveal__s0KEdv94Jk","freeBox___3H9Oi","freeBoxglobal_mode_reveal___3H9Oiv94Jk","text__yTgCr","textglobal_mode_reveal__yTgCRv94Jk","text___7TmOv","textglobal_mode_reveal___7TmOVv94Jk","nav","navglobal_mode_dark","Plasmic_404__VariantProps","Plasmic_404__ArgProps","as","hasGap","Plasmic_404__RenderFunc","Plasmic_404","fillColor","scrimColor","bgColor","rotation","_primary","h","s","b","_stroke","_secondary","_breath","breaths","breathCount","inspiration","radius","margin","colorsAreInverted","isStraight","secondaryToggle","points","complications","reflections","amplitude","offset","frameCount","isPlaying","initializeCanvas","frameSize","windowWidth","windowHeight","createCanvas","width","setup","colorMode","HSB","color","reset","frameRate","draw","showToggleIndicator","weave","height","blur","breathe","cos","radians","_x","_y","_theta","push","translate","rotate","fill","noStroke","theta","phi","PI","y","sin","j","circle","pop","_set","_margin","_breathRate","stroke","strokeWeight","noFill","rect","mouseClicked","mouseX","mouseY","floor","random","keyPressed","keyCode","ALT","OPTION","SHIFT","key","changePoints","changeComplications","changeReflections","LEFT_ARROW","changeRadius","RIGHT_ARROW","changeRotation","RETURN","ENTER","changeSecondaryHue","changeSecondarySaturation","changeSecondaryBrightness","changePrimaryHue","changePrimarySaturation","changePrimaryBrightness","changeBreathing","saveCanvas","filename","background","triangle","delta","map","newComplications","newReflections","newPoints","newRadius","windowResized","useState","setMode","onClick","newMode","includes","shift","unshift"],"sourceRoot":""}