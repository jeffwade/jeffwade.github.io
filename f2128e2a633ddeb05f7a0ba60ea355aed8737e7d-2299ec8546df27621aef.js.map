{"version":3,"file":"f2128e2a633ddeb05f7a0ba60ea355aed8737e7d-2299ec8546df27621aef.js","mappings":"uTACWA,EAAO,wCACPC,EAAiC,kEACjCC,EAAiB,kDAEjBC,EAAc,+C,UCoBZC,EAAkC,IAAIC,MAEtCC,EAA8B,IAAID,MAAM,OAAQ,SA8D7D,IAAME,EAAqB,CACzBP,KAAM,CAAC,SA2BF,IAxBoBQ,EACnBC,EAuBKC,EAAoBC,OAAOC,SAvBhCH,EAAO,SAAUI,GACrB,OAAsCC,EAAAA,EAAAA,IAAiBD,EAAO,CAC5DE,KAAMP,EACNQ,iBAAgB,OAAKT,EAAmBC,IACxCS,qBAAsBX,EACtBY,yBAA0Bd,IAG5B,OAzEJ,SAAuCS,GACUA,EAAvCM,SADqC,IAAD,IAC1BC,EAA6BP,EAA7BO,KAAMC,EAAuBR,EAAvBQ,UAAWC,EAAYT,EAAZS,QAC7BC,GAAiBC,EAAAA,EAAAA,IAAqB,CAC1CC,MAAMC,EAAAA,EAAAA,QAGR,OACE,kBACE,oBAAmB,OACnB,wBAAuBL,EAAUrB,KACjC,qBAAmB,EACnB,wBAAuBsB,EACvB,aAAYF,EAAKO,MACjBC,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,GACAA,EAAAA,EACAA,EAAAA,GACAC,GANmB,OAQhBD,EAAAA,KAA8BE,EAAAA,EAAAA,IAC7BT,EACA,OACA,QAXe,EAchBQ,EAAAA,uBAA2BC,EAAAA,EAAAA,IAC1BT,EACA,OACA,QAjBe,IAqBrBU,KAAM,SACNC,SAAU,EACVC,MAAOf,EAAKO,OAEXS,EAAAA,GAAoB,CACnBC,iBACE,QAAC,IAAD,CACET,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgBC,GACtCO,OAAQ,UACRL,KAAM,QAIVM,MAAOnB,EAAKoB,KACZZ,WAAWC,EAAAA,EAAAA,IAAWE,GAAD,OAClBA,IAAqCC,EAAAA,EAAAA,IACpCT,EACA,OACA,QAJiB,OAyBlBkB,CAA8B,CACnCtB,SARF,EAAQA,SASNC,KATF,EAAkBA,KAUhBC,UAVF,EAAwBA,UAWtBC,QAASd,MAINkC,YADU,UAhBQlC,EA0BP,QATG,oBAEnB,qBAAwCA,EAEnCC,GAMP,CAGEkC,qBAAsBvC,EACtBwC,iBAAkBtC,I,UCtHtB,SAASuC,EAAYhC,EAAOiC,GAC1B,IAAQnB,EAAUd,EAAVc,OACQoB,EAAAA,EAAAA,GAAW,OAAQpB,EAAO,MAC1C,OAAO,gBAACjB,EAAD,eAAmBV,KAAM,CAAE8C,IAAAA,IAAWjC,EAAtC,CAA6CmC,OAAO,UAG7D,IAEA,EAFmBC,EAAAA,WAAiBJ,I,4FCNvBK,EAAmBD,EAAAA,cAC9B,iCAGK,SAASE,IACd,OAAOF,EAAAA,WAAiBC,K,4FCLbE,EAAcH,EAAAA,cAAoB,iCAExC,SAASvB,IACd,OAAOuB,EAAAA,WAAiBG,K,8DCcnB,IAAMC,E,QAAoBjB,IAA0B,EAAM,CAC/DkB,YAAa,uB,uFCWf,IA5BO,SAAiBzC,GACtB,IAAQe,EAA0Cf,EAA1Ce,UAAW2B,EAA+B1C,EAA/B0C,MAAOpB,EAAwBtB,EAAxBsB,MAAUqB,GAApC,OAAkD3C,EAAlD,GACA,OACE,qCACE4C,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,OAAQ,MACRC,MAAO,MACPN,MAAK,eACHG,KAAM,gBACFH,GAAS,IAEf3B,WAAWC,EAAAA,EAAAA,IAAW,uBAAwBD,IAC1C4B,GAEHrB,GAAS,6BAAQA,GAElB,wBACE2B,EACE,iWAEFJ,KAAM,oB,uFCMd,IA5BO,SAAuB7C,GAC5B,IAAQe,EAA0Cf,EAA1Ce,UAAW2B,EAA+B1C,EAA/B0C,MAAOpB,EAAwBtB,EAAxBsB,MAAUqB,GAApC,OAAkD3C,EAAlD,GACA,OACE,qCACE4C,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,OAAQ,MACRC,MAAO,MACPN,MAAK,eACHG,KAAM,gBACFH,GAAS,IAEf3B,WAAWC,EAAAA,EAAAA,IAAW,uBAAwBD,IAC1C4B,GAEHrB,GAAS,6BAAQA,GAElB,wBACE2B,EACE,qwBAEFJ,KAAM,oB,uFCQd,IA9BO,SAAqB7C,GAC1B,IAAQe,EAA0Cf,EAA1Ce,UAAW2B,EAA+B1C,EAA/B0C,MAAOpB,EAAwBtB,EAAxBsB,MAAUqB,GAApC,OAAkD3C,EAAlD,GACA,OACE,qCACE4C,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,OAAQ,MACRC,MAAO,MACPN,MAAK,eACHG,KAAM,gBACFH,GAAS,IAEf3B,WAAWC,EAAAA,EAAAA,IAAW,uBAAwBD,IAC1C4B,GAEHrB,GAAS,6BAAQA,GAElB,wBACE4B,SAAU,UACVC,SAAU,UACVF,EACE,ywBAEFJ,KAAM,oB,uFCId,IA5BO,SAAqB7C,GAC1B,IAAQe,EAA0Cf,EAA1Ce,UAAW2B,EAA+B1C,EAA/B0C,MAAOpB,EAAwBtB,EAAxBsB,MAAUqB,GAApC,OAAkD3C,EAAlD,GACA,OACE,qCACE4C,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,OAAQ,MACRC,MAAO,MACPN,MAAK,eACHG,KAAM,gBACFH,GAAS,IAEf3B,WAAWC,EAAAA,EAAAA,IAAW,uBAAwBD,IAC1C4B,GAEHrB,GAAS,6BAAQA,GAElB,wBACE2B,EACE,mWAEFJ,KAAM,oB,uFCMd,IA5BO,SAAmB7C,GACxB,IAAQe,EAA0Cf,EAA1Ce,UAAW2B,EAA+B1C,EAA/B0C,MAAOpB,EAAwBtB,EAAxBsB,MAAUqB,GAApC,OAAkD3C,EAAlD,GACA,OACE,qCACE4C,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,OAAQ,MACRC,MAAO,MACPN,MAAK,eACHG,KAAM,gBACFH,GAAS,IAEf3B,WAAWC,EAAAA,EAAAA,IAAW,uBAAwBD,IAC1C4B,GAEHrB,GAAS,6BAAQA,GAElB,wBACE2B,EACE,0LAEFJ,KAAM,oB,mCCNd,IArByB,WACvB,OAA0CO,EAAAA,EAAAA,UAAS,CAAEC,EAAG,KAAMC,EAAG,OAA1DC,EAAP,KAAsBC,EAAtB,KAEMC,EAAkB,SAACC,GACvBF,EAAiB,CACfH,EAAGK,EAAEC,MACLL,EAAGI,EAAEE,SAYT,OARAC,EAAAA,EAAAA,YAAU,WAGR,OAFAC,OAAOC,iBAAiB,YAAaN,GAE9B,WACLK,OAAOE,oBAAoB,YAAaP,MAEzC,IAEIF,I,8aCnBEpE,EAAO,qCACP8E,EAAgB,8CAChBC,EAAgB,8CAChBC,EAAc,4CACdC,EAAa,2CACbC,EAAgB,8CAChBC,EAAc,4CACdC,EAA2B,yDAC3BC,EAA0B,wDAC1BC,EAA6B,2DAC7BC,EAA2B,yDAC3BC,EAAe,6CCYbC,EAA+B,IAAIpF,MAAM,MAEzCqF,EAA2B,IAAIrF,MAAM,QAAS,WAoE3D,IAAME,EAAqB,CACzBP,KAAM,CAAC,SA2BF,IAxBoBQ,EACnBC,EAuBKkF,EAAiBhF,OAAOC,SAvB7BH,EAAO,SAAUI,GACrB,OAAsCC,EAAAA,EAAAA,IAAiBD,EAAO,CAC5DE,KAAMP,EACNQ,iBAAgB,OAAKT,EAAmBC,IACxCS,qBAAsByE,EACtBxE,yBAA0BuE,IAG5B,OA/EJ,SAAoC5E,GAAQ,IAAD,IACjCM,EAAuCN,EAAvCM,SAAUC,EAA6BP,EAA7BO,KAAMC,EAAuBR,EAAvBQ,UAAWC,EAAYT,EAAZS,QAC7BC,GAAiBC,EAAAA,EAAAA,IAAqB,CAC1CC,MAAMC,EAAAA,EAAAA,QAGR,OACE,eACE,oBAAmB,OACnB,wBAAuBL,EAAUrB,KACjC,qBAAmB,EACnB,wBAAuBsB,EACvBM,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,EACAA,EAAAA,GACAC,GALmB,OAOhBD,EAAAA,KAA8BE,EAAAA,EAAAA,IAC7BT,EACA,OACA,QAVe,EAahBQ,IAAkBC,EAAAA,EAAAA,IAAWb,EAAU,KAAM,QAb7B,EAchBY,IAAkBC,EAAAA,EAAAA,IAAWb,EAAU,KAAM,QAd7B,EAehBY,EAAAA,cAAkBC,EAAAA,EAAAA,IAAWb,EAAU,KAAM,QAf7B,EAgBhBY,IAAoBC,EAAAA,EAAAA,IAAWb,EAAU,KAAM,UAhB/B,EAiBhBY,IAAoBC,EAAAA,EAAAA,IAAWb,EAAU,KAAM,UAjB/B,EAkBhBY,IAAiBC,EAAAA,EAAAA,IAAWb,EAAU,KAAM,OAlB5B,EAmBhBY,IAAoBC,EAAAA,EAAAA,IAAWb,EAAU,KAAM,UAnB/B,KAuBpBiB,EAAAA,GAAoB,CACnBC,iBACE,eACET,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACAA,EAAAA,WACAC,IAGD,cAILQ,MAAOnB,EAAKwE,QACZhE,WAAWC,EAAAA,EAAAA,IAAWE,EAAAA,mBAAD,OAClBA,IAA+BC,EAAAA,EAAAA,IAAWb,EAAU,KAAM,QADxC,EAElBY,IAA+BC,EAAAA,EAAAA,IAAWb,EAAU,KAAM,QAFxC,EAGlBY,EAAAA,2BAA+BC,EAAAA,EAAAA,IAAWb,EAAU,KAAM,QAHxC,EAIlBY,IAAiCC,EAAAA,EAAAA,IAChCb,EACA,KACA,UAPiB,EAUlBY,IAA8BC,EAAAA,EAAAA,IAAWb,EAAU,KAAM,OAVvC,OA8BlB0E,CAA2B,CAChC1E,SARF,EAAQA,SASNC,KATF,EAAkBA,KAUhBC,UAVF,EAAwBA,UAWtBC,QAASd,MAINkC,YADU,UAhBQlC,EA0BP,QATG,iBAEnB,kBAAqCA,EAEhCC,GAMP,CAGEkC,qBAAsB8C,EACtB7C,iBAAkB8C,IC9HtB,SAASI,EAASjF,EAAOiC,GACvB,OAAO,gBAAC6C,EAAD,eAAgB3F,KAAM,CAAE8C,IAAAA,IAAWjC,IAG5C,IAEA,EAFgBoC,EAAAA,WAAiB6C,GCuCjC,EA1CmB,SAACC,EAAIpE,EAAOiE,EAASI,GACtC,IAAM5B,GAAgB6B,EAAAA,EAAAA,KAElBC,EAAiBF,EAOf,CACFG,QAAS,QACTC,SAAU,WACVC,KAAM,OACNC,MAAO,OACPC,OAAQ,KAXR,CACAJ,QAAS,QACTC,SAAU,QACVC,KAAMjC,EAAcF,EAAI,GACxBsC,IAAKpC,EAAcD,EAAI,GACvBoC,OAAQ,KA4BNE,EAAU,CAnBK9E,EACnB,uBACE4B,MAAO,CACL4C,QAAS,OACTO,cAAe,MACfC,WAAY,SACZC,IAAK,SACLjF,GAEF,KAEmBiE,EAEnB,2BACIA,GAGJ,MAIJ,OAAO,gBAAC,EAAD,CAASA,QAASa,EAASV,GAAIA,EAAIxC,MAAO2C,M,4QC1C5C,IAAIW,EAAiB,kDACjBC,EAAmB,oDACnBC,EAAyB,0DAIzBC,EAAM,uCAMNC,EAAS,0CAITC,EAAK,sCACLC,EAAK,sCAMLC,EAAI,qCAMJC,EAAuB,wDACvBC,EAAa","sources":["webpack://jeffdoes/./src/components/plasmic/jeffdo_es/PlasmicIconButton.module.css","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/PlasmicIconButton.jsx","webpack://jeffdoes/./src/components/IconButton.jsx","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/PlasmicGlobalVariant__Highlight.jsx","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/PlasmicGlobalVariant__Mode.jsx","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/PlasmicGlobalVariant__Screen.jsx","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/icons/PlasmicIcon__Day.jsx","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/icons/PlasmicIcon__EyeClosed.jsx","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/icons/PlasmicIcon__EyeOpen.jsx","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/icons/PlasmicIcon__JwSharp.jsx","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/icons/PlasmicIcon__Night.jsx","webpack://jeffdoes/./src/hooks/useMousePosition.jsx","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/PlasmicTooltip.module.css","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/PlasmicTooltip.jsx","webpack://jeffdoes/./src/components/Tooltip.jsx","webpack://jeffdoes/./src/hooks/useTooltip.jsx","webpack://jeffdoes/./src/components/plasmic/jeffdo_es/plasmic_jeffdo_es.module.css"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicIconButton-module--root--llPC9\";\nexport var slotTargetIconglobal_mode_dark = \"PlasmicIconButton-module--slotTargetIconglobal_mode_dark--YBGPl\";\nexport var slotTargetIcon = \"PlasmicIconButton-module--slotTargetIcon--8-dcG\";\nexport var __wab_slot = \"PlasmicIconButton-module--__wab_slot--Q+MwV\";\nexport var svg___4AqAa = \"PlasmicIconButton-module--svg___4AqAa--HcaYX\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: mujoL4gD3qd1ezKDLZ31rZ\n// Component: mEnM6zW3GD\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport { useMode } from \"./PlasmicGlobalVariant__Mode\" // plasmic-import: zulsK3o-3W/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_jeffdo_es.module.css\" // plasmic-import: mujoL4gD3qd1ezKDLZ31rZ/projectcss\nimport * as sty from \"./PlasmicIconButton.module.css\" // plasmic-import: mEnM6zW3GD/css\nimport NightIcon from \"./icons/PlasmicIcon__Night\" // plasmic-import: nS7MqAdlwl/icon\n\nexport const PlasmicIconButton__VariantProps = new Array()\n\nexport const PlasmicIconButton__ArgProps = new Array(\"icon\", \"label\")\n\nfunction PlasmicIconButton__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const globalVariants = ensureGlobalVariants({\n    mode: useMode(),\n  })\n\n  return (\n    <button\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      aria-label={args.label}\n      className={classNames(\n        projectcss.all,\n        projectcss.button,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_tokens,\n        sty.root,\n        {\n          [projectcss.global_mode_dark]: hasVariant(\n            globalVariants,\n            \"mode\",\n            \"dark\"\n          ),\n\n          [sty.rootglobal_mode_dark]: hasVariant(\n            globalVariants,\n            \"mode\",\n            \"dark\"\n          ),\n        }\n      )}\n      role={\"button\"}\n      tabIndex={0}\n      title={args.label}\n    >\n      {p.renderPlasmicSlot({\n        defaultContents: (\n          <NightIcon\n            className={classNames(projectcss.all, sty.svg___4AqAa)}\n            cursor={\"pointer\"}\n            role={\"img\"}\n          />\n        ),\n\n        value: args.icon,\n        className: classNames(sty.slotTargetIcon, {\n          [sty.slotTargetIconglobal_mode_dark]: hasVariant(\n            globalVariants,\n            \"mode\",\n            \"dark\"\n          ),\n        }),\n      })}\n    </button>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicIconButton__ArgProps,\n      internalVariantPropNames: PlasmicIconButton__VariantProps,\n    })\n\n    return PlasmicIconButton__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicIconButton\"\n  } else {\n    func.displayName = `PlasmicIconButton.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicIconButton = Object.assign(\n  // Top-level PlasmicIconButton renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    // Metadata about props expected for PlasmicIconButton\n    internalVariantProps: PlasmicIconButton__VariantProps,\n    internalArgProps: PlasmicIconButton__ArgProps,\n  }\n)\n\nexport default PlasmicIconButton\n/* prettier-ignore-end */\n","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicIconButton } from \"./plasmic/jeffdo_es/PlasmicIconButton\"\nimport useTooltip from \"../hooks/useTooltip\";\n\nfunction IconButton_(props, ref) {\n  const { label } = props;\n  const tooltip = useTooltip(\"mint\", label, null);\n  return <PlasmicIconButton root={{ ref }} {...props} render=\"bleh\"/>\n}\n\nconst IconButton = React.forwardRef(IconButton_)\n\nexport default IconButton\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport * as React from \"react\"\n\nexport const HighlightContext = React.createContext(\n  \"PLEASE_RENDER_INSIDE_PROVIDER\"\n)\n\nexport function useHighlight() {\n  return React.useContext(HighlightContext)\n}\n\nexport default HighlightContext\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport * as React from \"react\"\n\nexport const ModeContext = React.createContext(\"PLEASE_RENDER_INSIDE_PROVIDER\")\n\nexport function useMode() {\n  return React.useContext(ModeContext)\n}\n\nexport default ModeContext\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\n\nexport const ScreenContext = React.createContext(\n  \"PLEASE_RENDER_INSIDE_PROVIDER\"\n)\n/**\n *  @deprecated Plasmic now uses a custom hook for Screen variants, which is\n *  automatically included in your components. Please remove this provider\n *  from your code.\n */\n\nexport function ScreenVariantProvider(props) {\n  console.warn(\n    \"DEPRECATED: Plasmic now uses a custom hook for Screen variants, which is automatically included in your components. Please remove this provider from your code.\"\n  )\n  return props.children\n}\n\nexport const useScreenVariants = p.createUseScreenVariants(true, {\n  desktopOnly: \"(min-width:768px)\",\n})\n\nexport default ScreenContext\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function DayIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 16 16\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M8 0l1.026 1.778H6.974L8 0zm0 13.037a4.74 4.74 0 110-9.481 4.74 4.74 0 010 9.481zm5.126-8.711l.53-1.983-1.982.531 1.452 1.452zM16 8l-1.778 1.026V6.974L16 8zm-4.326 5.126l1.983.53-.531-1.982-1.452 1.452zM8 16l1.026-1.778H6.974L8 16zm-3.674-2.874l-1.983.53.531-1.982 1.452 1.452zM0 8l1.778 1.026V6.974L0 8zm2.874-3.674l-.53-1.983 1.982.531-1.452 1.452z\"\n        }\n        fill={\"currentColor\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default DayIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function EyeClosedIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 16 16\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M9.004 11.903A5.52 5.52 0 018 12c-2.6 0-6-2.134-7-5h2c.571 1.72 2.514 3.5 5 3.5s4.429-1.78 5-3.5h2c-.305.873-.832 1.678-1.492 2.376.01.048.026.088.044.121.068.128.205.259.453.445.052.04.11.081.172.126.453.326 1.103.794 1.377 1.616l-.949.316c-.165-.496-.534-.767-1-1.11l-.2-.148c-.221-.166-.48-.373-.662-.651a9.048 9.048 0 01-.725.54c-.04.183-.007.289.034.366.068.128.205.259.453.445.052.04.11.081.172.126.453.326 1.103.794 1.377 1.616l-.949.316c-.165-.496-.534-.767-1-1.11l-.2-.148c-.253-.19-.554-.433-.735-.774a1.436 1.436 0 01-.113-.276 8.327 8.327 0 01-1.04.441c-.038.182-.006.287.035.364.068.128.205.259.453.445.052.04.11.081.172.126.453.326 1.103.794 1.377 1.616l-.949.316c-.165-.496-.534-.767-1-1.11l-.2-.148c-.253-.19-.554-.433-.735-.774a1.42 1.42 0 01-.166-.565z\"\n        }\n        fill={\"currentColor\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default EyeClosedIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function EyeOpenIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 16 16\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fillRule={\"evenodd\"}\n        clipRule={\"evenodd\"}\n        d={\n          \"M6.536 3.2a1.433 1.433 0 00-.126-.326c-.182-.34-.483-.585-.735-.774l-.201-.149c-.465-.342-.834-.613-1-1.11l-.948.317c.274.822.924 1.29 1.376 1.616.062.044.12.086.173.126.248.186.384.317.453.445.024.045.045.1.05.174a8.75 8.75 0 00-1.088.534 1.42 1.42 0 00-.08-.179c-.182-.34-.483-.585-.735-.774l-.201-.149c-.466-.342-.834-.613-1-1.11l-.948.317c.274.822.924 1.29 1.376 1.616.062.044.12.086.173.126.248.186.384.317.453.445.037.07.067.163.043.317a8.896 8.896 0 00-.723.607c-.183-.287-.448-.5-.673-.669l-.201-.149c-.465-.342-.834-.613-1-1.11l-.948.317C.3 4.48.95 4.948 1.402 5.274c.062.044.12.086.173.126.248.186.384.317.453.445.031.06.058.136.05.252A6.459 6.459 0 001 8c1 2.866 4.4 5 7 5 2.6 0 6-2.134 7-5-1-2.866-4.4-5-7-5-.468 0-.962.07-1.464.2zM11 8a3 3 0 11-6 0 3 3 0 016 0z\"\n        }\n        fill={\"currentColor\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default EyeOpenIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function JwSharpIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 16 16\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M7 5H6V4l1 1zM6 5h1l1 1v1H6V5zm4 4h1l1 1v1h-2V9zM6 7h2v2H6zm0 2h2v2H6zm0 2h2v2H6zm0 2h2v2H6zm2 0h2v2H8zm2-2h2v2h-2zm5 2h-1v-1l1 1zm-2 0h1v-1l-1 1zm-4 0h1v-1l-1 1zm5 2l1.5-1.5-.5-.5h-1v2zm-4 0l2-2h-2v2zm2-2h2v2h-2zm-1-4h-1V8l1 1zM0 1h2v2H0zm2 0h1l1 1v1H2V1zM1 13h1v-1l-1 1zm1 2l2-2H2v2zM2 3h2v2H2zm0 2h2v2H2zm0 2h2v2H2zm0 2h2v2H2zm0 2h2v2H2zm-2 2h2v2H0z\"\n        }\n        fill={\"currentColor\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default JwSharpIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function NightIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 16 16\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M12.828 6.705a5 5 0 01-3.537 6.123A5.007 5.007 0 014 11.01c4.031-.795 6.288-4.468 5.29-7.84a5 5 0 013.538 3.535zM2.5 2C3 3 3 3 3.745 3.5 3 4 3 4 2.5 5 2 4 2 4 1.243 3.5 2 3 2 3 2.5 2z\"\n        }\n        fill={\"currentColor\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default NightIcon\n/* prettier-ignore-end */\n","import { useEffect, useState } from 'react';\n\nconst useMousePosition = () => {\n  const [mousePosition, setMousePosition] = useState({ x: null, y: null });\n\n  const handleMouseMove = (e) => {\n    setMousePosition({\n      x: e.pageX,\n      y: e.pageY,\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener('mousemove', handleMouseMove);\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n\n  return mousePosition;\n};\n\nexport default useMousePosition;\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicTooltip-module--root--Wsyg0\";\nexport var rootbg_yellow = \"PlasmicTooltip-module--rootbg_yellow--si5au\";\nexport var rootbg_orange = \"PlasmicTooltip-module--rootbg_orange--2U65N\";\nexport var rootbg_blue = \"PlasmicTooltip-module--rootbg_blue--BoTNt\";\nexport var rootbg_red = \"PlasmicTooltip-module--rootbg_red--cxjmS\";\nexport var rootbg_purple = \"PlasmicTooltip-module--rootbg_purple--SzEDt\";\nexport var rootbg_grey = \"PlasmicTooltip-module--rootbg_grey--D9lGY\";\nexport var slotTargetContentbg_blue = \"PlasmicTooltip-module--slotTargetContentbg_blue--rNzcj\";\nexport var slotTargetContentbg_red = \"PlasmicTooltip-module--slotTargetContentbg_red--vnU7C\";\nexport var slotTargetContentbg_purple = \"PlasmicTooltip-module--slotTargetContentbg_purple--nT1Ix\";\nexport var slotTargetContentbg_grey = \"PlasmicTooltip-module--slotTargetContentbg_grey--JcBBN\";\nexport var text___4Lrap = \"PlasmicTooltip-module--text___4Lrap--TxW8c\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: mujoL4gD3qd1ezKDLZ31rZ\n// Component: JmW7BQJp6k\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport { useMode } from \"./PlasmicGlobalVariant__Mode\" // plasmic-import: zulsK3o-3W/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_jeffdo_es.module.css\" // plasmic-import: mujoL4gD3qd1ezKDLZ31rZ/projectcss\nimport * as sty from \"./PlasmicTooltip.module.css\" // plasmic-import: JmW7BQJp6k/css\n\nexport const PlasmicTooltip__VariantProps = new Array(\"bg\")\n\nexport const PlasmicTooltip__ArgProps = new Array(\"color\", \"content\")\n\nfunction PlasmicTooltip__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const globalVariants = ensureGlobalVariants({\n    mode: useMode(),\n  })\n\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_tokens,\n        sty.root,\n        {\n          [projectcss.global_mode_dark]: hasVariant(\n            globalVariants,\n            \"mode\",\n            \"dark\"\n          ),\n\n          [sty.rootbg_blue]: hasVariant(variants, \"bg\", \"blue\"),\n          [sty.rootbg_grey]: hasVariant(variants, \"bg\", \"grey\"),\n          [sty.rootbg_mint]: hasVariant(variants, \"bg\", \"mint\"),\n          [sty.rootbg_orange]: hasVariant(variants, \"bg\", \"orange\"),\n          [sty.rootbg_purple]: hasVariant(variants, \"bg\", \"purple\"),\n          [sty.rootbg_red]: hasVariant(variants, \"bg\", \"red\"),\n          [sty.rootbg_yellow]: hasVariant(variants, \"bg\", \"yellow\"),\n        }\n      )}\n    >\n      {p.renderPlasmicSlot({\n        defaultContents: (\n          <div\n            className={classNames(\n              projectcss.all,\n              projectcss.__wab_text,\n              sty.text___4Lrap\n            )}\n          >\n            {\"about jeff\"}\n          </div>\n        ),\n\n        value: args.content,\n        className: classNames(sty.slotTargetContent, {\n          [sty.slotTargetContentbg_blue]: hasVariant(variants, \"bg\", \"blue\"),\n          [sty.slotTargetContentbg_grey]: hasVariant(variants, \"bg\", \"grey\"),\n          [sty.slotTargetContentbg_mint]: hasVariant(variants, \"bg\", \"mint\"),\n          [sty.slotTargetContentbg_purple]: hasVariant(\n            variants,\n            \"bg\",\n            \"purple\"\n          ),\n\n          [sty.slotTargetContentbg_red]: hasVariant(variants, \"bg\", \"red\"),\n        }),\n      })}\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicTooltip__ArgProps,\n      internalVariantPropNames: PlasmicTooltip__VariantProps,\n    })\n\n    return PlasmicTooltip__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicTooltip\"\n  } else {\n    func.displayName = `PlasmicTooltip.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicTooltip = Object.assign(\n  // Top-level PlasmicTooltip renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    // Metadata about props expected for PlasmicTooltip\n    internalVariantProps: PlasmicTooltip__VariantProps,\n    internalArgProps: PlasmicTooltip__ArgProps,\n  }\n)\n\nexport default PlasmicTooltip\n/* prettier-ignore-end */\n","import * as React from \"react\"\nimport { PlasmicTooltip } from \"./plasmic/jeffdo_es/PlasmicTooltip\"\n\nfunction Tooltip_(props, ref) {\n  return <PlasmicTooltip root={{ ref }} {...props} />\n}\n\nconst Tooltip = React.forwardRef(Tooltip_)\n\nexport default Tooltip\n","import * as React from 'react';\nimport useMousePosition from \"../hooks/useMousePosition\";\nimport Tooltip from \"../components/Tooltip\";\n\nconst useTooltip = (bg, label, content, noMouse) => {\n  const mousePosition = useMousePosition();\n\n  let previewStyles = !noMouse \n    ? {\n      display: \"block\",\n      position: \"fixed\",\n      left: mousePosition.x + 15,\n      top: mousePosition.y + 15,\n      zIndex: 100,\n    } : {\n      display: \"block\",\n      position: \"absolute\",\n      left: \"auto\",\n      right: \"auto\",\n      zIndex: 100,\n    };\n\n  const previewLabel = label ? (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        gap: \"1rem\", }}>\n      { label }\n    </div>\n  ) : null;\n\n  const previewContent = content\n    ? (\n      <div>\n        { content }\n      </div>\n    )\n    : null;\n\n  const preview = [previewLabel, previewContent];\n\n  return <Tooltip content={preview} bg={bg} style={previewStyles}/>;\n};\n\nexport default useTooltip;\n\n","// extracted by mini-css-extract-plugin\nexport var plasmic_tokens = \"plasmic_jeffdo_es-module--plasmic_tokens--5VKYV\";\nexport var global_mode_dark = \"plasmic_jeffdo_es-module--global_mode_dark--rPiKo\";\nexport var plasmic_default_styles = \"plasmic_jeffdo_es-module--plasmic_default_styles--w5T9J\";\nexport var global_mode_reveal = \"plasmic_jeffdo_es-module--global_mode_reveal--j+JpX\";\nexport var global_highlight_about = \"plasmic_jeffdo_es-module--global_highlight_about--n5Gvu\";\nexport var global_highlight_work = \"plasmic_jeffdo_es-module--global_highlight_work--nxbZo\";\nexport var all = \"plasmic_jeffdo_es-module--all--a8ze+\";\nexport var img = \"plasmic_jeffdo_es-module--img--KLkLY\";\nexport var li = \"plasmic_jeffdo_es-module--li--JmRKz\";\nexport var span = \"plasmic_jeffdo_es-module--span--8ce+f\";\nexport var input = \"plasmic_jeffdo_es-module--input--RtXyy\";\nexport var textarea = \"plasmic_jeffdo_es-module--textarea--Nov9s\";\nexport var button = \"plasmic_jeffdo_es-module--button--GU8RA\";\nexport var code = \"plasmic_jeffdo_es-module--code--zo9l7\";\nexport var pre = \"plasmic_jeffdo_es-module--pre--JCQ5R\";\nexport var p = \"plasmic_jeffdo_es-module--p--hHq1e\";\nexport var h1 = \"plasmic_jeffdo_es-module--h1--8CQ7v\";\nexport var h2 = \"plasmic_jeffdo_es-module--h2--YHD+1\";\nexport var h3 = \"plasmic_jeffdo_es-module--h3--65DN0\";\nexport var h4 = \"plasmic_jeffdo_es-module--h4--TXBdl\";\nexport var h5 = \"plasmic_jeffdo_es-module--h5--9Pn4h\";\nexport var h6 = \"plasmic_jeffdo_es-module--h6--cvXlN\";\nexport var address = \"plasmic_jeffdo_es-module--address--vUcrs\";\nexport var a = \"plasmic_jeffdo_es-module--a--wSTOr\";\nexport var ol = \"plasmic_jeffdo_es-module--ol--K+LJ1\";\nexport var ul = \"plasmic_jeffdo_es-module--ul--2+SAh\";\nexport var select = \"plasmic_jeffdo_es-module--select--3JE16\";\nexport var plasmic_default__component_wrapper = \"plasmic_jeffdo_es-module--plasmic_default__component_wrapper--2hslb\";\nexport var plasmic_default__inline = \"plasmic_jeffdo_es-module--plasmic_default__inline--2ekV5\";\nexport var plasmic_page_wrapper = \"plasmic_jeffdo_es-module--plasmic_page_wrapper--UJgEK\";\nexport var root_reset = \"plasmic_jeffdo_es-module--root_reset--dYImy\";\nexport var plasmic_default__h4 = \"plasmic_jeffdo_es-module--plasmic_default__h4--d22a6\";\nexport var plasmic_default__h5 = \"plasmic_jeffdo_es-module--plasmic_default__h5--H+6la\";\nexport var plasmic_default__h6 = \"plasmic_jeffdo_es-module--plasmic_default__h6--up7F3\";\nexport var plasmic_default__a = \"plasmic_jeffdo_es-module--plasmic_default__a--X-pln\";\nexport var plasmic_default__blockquote = \"plasmic_jeffdo_es-module--plasmic_default__blockquote--IIU62\";\nexport var blockquote = \"plasmic_jeffdo_es-module--blockquote--KVXIL\";\nexport var plasmic_default__h1 = \"plasmic_jeffdo_es-module--plasmic_default__h1--NByMd\";\nexport var plasmic_default__h2 = \"plasmic_jeffdo_es-module--plasmic_default__h2--bG747\";\nexport var plasmic_default__h3 = \"plasmic_jeffdo_es-module--plasmic_default__h3--7myTJ\";\nexport var plasmic_default__code = \"plasmic_jeffdo_es-module--plasmic_default__code--ZEfFo\";\nexport var plasmic_default__pre = \"plasmic_jeffdo_es-module--plasmic_default__pre--zua6k\";\nexport var plasmic_default__ol = \"plasmic_jeffdo_es-module--plasmic_default__ol--7L0XT\";\nexport var plasmic_default__ul = \"plasmic_jeffdo_es-module--plasmic_default__ul--mwDvQ\";"],"names":["root","slotTargetIconglobal_mode_dark","slotTargetIcon","svg___4AqAa","PlasmicIconButton__VariantProps","Array","PlasmicIconButton__ArgProps","PlasmicDescendants","nodeName","func","PlasmicIconButton","Object","assign","props","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","args","overrides","forNode","globalVariants","ensureGlobalVariants","mode","useMode","label","className","classNames","projectcss","sty","hasVariant","role","tabIndex","title","p","defaultContents","cursor","value","icon","PlasmicIconButton__RenderFunc","displayName","internalVariantProps","internalArgProps","IconButton_","ref","useTooltip","render","React","HighlightContext","useHighlight","ModeContext","useScreenVariants","desktopOnly","style","restProps","xmlns","fill","viewBox","height","width","d","fillRule","clipRule","useState","x","y","mousePosition","setMousePosition","handleMouseMove","e","pageX","pageY","useEffect","window","addEventListener","removeEventListener","rootbg_yellow","rootbg_orange","rootbg_blue","rootbg_red","rootbg_purple","rootbg_grey","slotTargetContentbg_blue","slotTargetContentbg_red","slotTargetContentbg_purple","slotTargetContentbg_grey","text___4Lrap","PlasmicTooltip__VariantProps","PlasmicTooltip__ArgProps","PlasmicTooltip","content","PlasmicTooltip__RenderFunc","Tooltip_","bg","noMouse","useMousePosition","previewStyles","display","position","left","right","zIndex","top","preview","flexDirection","alignItems","gap","plasmic_tokens","global_mode_dark","plasmic_default_styles","all","button","h1","h2","a","plasmic_page_wrapper","root_reset"],"sourceRoot":""}